{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/sheets.ts"],"sourcesContent":["'use server';\n\nimport { google } from 'googleapis';\nimport type { sheets_v4 } from 'googleapis';\n\n// Define the structure of a row in your sheet\nexport interface SheetRow {\n  'Donor/Opp': string;\n  'Action/Next Step': string;\n  Lead: string;\n  Priority: 'High' | 'Medium' | 'Low';\n  Probability: 'High' | 'Medium' | 'Low';\n}\n\n// Environment variables\nconst SHEET_ID = process.env.GOOGLE_SHEET_ID;\nconst SERVICE_ACCOUNT_EMAIL = process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL;\nconst SHEET_RANGE = process.env.GOOGLE_SHEET_RANGE || 'Sheet1!A:E'; // Default range if not specified\n\nlet PRIVATE_KEY: string | undefined;\nconst rawPrivateKeyFromEnv = process.env.GOOGLE_PRIVATE_KEY;\n\nif (typeof rawPrivateKeyFromEnv === 'string' && rawPrivateKeyFromEnv.trim() !== '') {\n    let key = rawPrivateKeyFromEnv.trim();\n    \n    // Strip surrounding quotes if present (common for multi-line env vars copied from JSON strings)\n    if ((key.startsWith('\"') && key.endsWith('\"')) ||\n        (key.startsWith(\"'\") && key.endsWith(\"'\"))) {\n        key = key.substring(1, key.length - 1);\n    }\n\n    // Unescape literal '\\\\n' to actual newline characters.\n    const unescapedKeyRaw = key.replace(/\\\\n/g, '\\n');\n    // Trim whitespace around the entire unescaped block before checking markers.\n    const unescapedKey = unescapedKeyRaw.trim(); \n\n    if (\n        unescapedKey.startsWith('-----BEGIN PRIVATE KEY-----') &&\n        unescapedKey.endsWith('-----END PRIVATE KEY-----') &&\n        unescapedKey.includes('\\n') // Ensure there are actual newlines within the key block\n    ) {\n        const coreKeyContent = unescapedKey\n            .substring('-----BEGIN PRIVATE KEY-----'.length, unescapedKey.length - '-----END PRIVATE KEY-----'.length)\n            .trim();\n        if (coreKeyContent.length > 0) {\n            PRIVATE_KEY = unescapedKey; // Use the trimmed, unescaped key\n            // console.log('Successfully processed GOOGLE_PRIVATE_KEY.');\n        } else {\n            console.warn(\n                'GOOGLE_PRIVATE_KEY warning: Processed key has PEM markers but no content in between. ' +\n                'Original GOOGLE_PRIVATE_KEY (first 30 chars, trimmed): \"' + (rawPrivateKeyFromEnv || \"\").trim().substring(0, 30) + '\". ' +\n                'Sheet operations will likely fail.'\n            );\n            PRIVATE_KEY = undefined;\n        }\n    } else {\n        console.warn(\n            'GOOGLE_PRIVATE_KEY warning: Malformed structure after processing. ' +\n            `Key starts with (after processing and trimming): \"${unescapedKey.substring(0, 30)}...\". ` +\n            `Key ends with (after processing and trimming): \"...${unescapedKey.substring(Math.max(0, unescapedKey.length - 30))}\". ` +\n            `Includes newlines: ${unescapedKey.includes('\\n')}. ` +\n            'Original GOOGLE_PRIVATE_KEY (first 30 chars, trimmed): \"' + (rawPrivateKeyFromEnv || \"\").trim().substring(0, 30) + '\". ' +\n            'Ensure it is a valid PEM key with actual newlines between markers, correctly escaped newlines (\\\\n) if stored as a single line string in .env, and no extraneous characters.'\n        );\n        PRIVATE_KEY = undefined;\n    }\n} else {\n    if (rawPrivateKeyFromEnv === undefined) {\n        // console.log('GOOGLE_PRIVATE_KEY is not set. Sheet operations requiring auth will fail.');\n    } else {\n        console.warn('GOOGLE_PRIVATE_KEY is set but is empty or only whitespace. Sheet operations requiring auth will fail.');\n    }\n    PRIVATE_KEY = undefined;\n}\n\n// Initial check for logging purposes; actual guard is in getSheetsClient\n(() => {\n  const missingVarsWarn = [];\n  if (!SHEET_ID) missingVarsWarn.push('GOOGLE_SHEET_ID');\n  if (!SERVICE_ACCOUNT_EMAIL) missingVarsWarn.push('GOOGLE_SERVICE_ACCOUNT_EMAIL');\n  \n  if (!PRIVATE_KEY && rawPrivateKeyFromEnv && rawPrivateKeyFromEnv.trim() !== '') { \n    missingVarsWarn.push('GOOGLE_PRIVATE_KEY (set but failed processing - see detailed warning above)');\n  } else if (!PRIVATE_KEY && (!rawPrivateKeyFromEnv || rawPrivateKeyFromEnv.trim() === '')) {\n     missingVarsWarn.push('GOOGLE_PRIVATE_KEY (not set or empty)');\n  }\n\n  if (missingVarsWarn.length > 0) {\n    console.warn(\n      `SheetSync Initialization Warning: One or more Google Sheets API credentials are problematic. Sheet operations are likely to fail. Problematic variables: [${missingVarsWarn.join(', ')}]`\n    );\n  }\n})();\n\n\nexport async function getSheetsClient(): Promise<sheets_v4.Sheets | null> {\n  if (!SHEET_ID || !SERVICE_ACCOUNT_EMAIL || !PRIVATE_KEY) {\n    const errorParts = ['Cannot initialize Sheets client due to missing/invalid credentials:'];\n    if (!SHEET_ID) errorParts.push('- GOOGLE_SHEET_ID is not set.');\n    if (!SERVICE_ACCOUNT_EMAIL) errorParts.push('- GOOGLE_SERVICE_ACCOUNT_EMAIL is not set.');\n    \n    if (!PRIVATE_KEY) {\n      if (!rawPrivateKeyFromEnv) errorParts.push('- GOOGLE_PRIVATE_KEY is not set.');\n      else if (rawPrivateKeyFromEnv.trim() === '' || rawPrivateKeyFromEnv.trim() === '\"\"' || rawPrivateKeyFromEnv.trim() === \"''\") errorParts.push('- GOOGLE_PRIVATE_KEY is set but is empty or only whitespace.');\n      else errorParts.push('- GOOGLE_PRIVATE_KEY is set but was malformed or failed structural/PEM checks (see previous warnings for details).');\n    }\n    console.error(errorParts.join('\\n  '));\n    return null;\n  }\n\n  try {\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: SERVICE_ACCOUNT_EMAIL,\n        private_key: PRIVATE_KEY, \n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n    });\n    // console.log('GoogleAuth client initialized successfully.');\n    return google.sheets({ version: 'v4', auth });\n  } catch (error: any) {\n    console.error('CRITICAL Error initializing Google Auth client with processed PRIVATE_KEY:', error.message);\n    const pkPreview = PRIVATE_KEY ? `${PRIVATE_KEY.substring(0, Math.min(40, PRIVATE_KEY.length))}...${PRIVATE_KEY.substring(Math.max(0, PRIVATE_KEY.length - Math.min(40, PRIVATE_KEY.length)))}` : \"PRIVATE_KEY_IS_UNDEFINED\";\n    console.error(`Private key used (preview): ${pkPreview}`);\n    if (error instanceof Error && (error.message.includes('DECODER routines') || error.message.includes('PEM routines') || error.message.includes('private key') || error.message.includes('asn1 encoding'))) {\n        console.error(\n          'This error during auth initialization often indicates an issue with the GOOGLE_PRIVATE_KEY format or value even after initial checks. Ensure it is a valid PEM-formatted private key, with actual newlines if copied from a source that used \\\\n. The key might have passed basic structural checks but is still not parsable by the crypto library.'\n        );\n    }\n    return null;\n  }\n}\n\nexport async function getSheetData(): Promise<SheetRow[]> {\n  const sheets = await getSheetsClient();\n  if (!sheets) {\n     console.warn('getSheetData: Google Sheets client is not available (possibly due to configuration issues). Returning empty data.');\n     return [];\n  }\n  if (!SHEET_ID){ \n    console.warn('getSheetData: GOOGLE_SHEET_ID is not configured. Returning empty data.');\n    return [];\n  }\n\n  try {\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE,\n    });\n\n    const rows = response.data.values;\n    if (!rows || rows.length === 0) {\n      // console.log('No data found in the specified sheet range or sheet is empty.');\n      return [];\n    }\n\n    const headers = rows[0].map(header => String(header).trim());\n    const dataRows = rows.slice(1);\n\n    const expectedHeaders = ['Donor/Opp', 'Action/Next Step', 'Lead', 'Priority', 'Probability'];\n    const missingHeaders = expectedHeaders.filter(eh => !headers.includes(eh));\n    if (missingHeaders.length > 0) {\n       console.warn(`Sheet is missing expected headers: [${missingHeaders.join(', ')}]. Current headers: [${headers.join(', ')}]. Data mapping might be incorrect or incomplete.`);\n    }\n\n    return dataRows.map((row) => {\n      const rowData: Partial<SheetRow> = {};\n      headers.forEach((header, index) => {\n        const cellValue = row[index] !== undefined && row[index] !== null ? String(row[index]) : ''; \n\n        if (expectedHeaders.includes(header)) { \n            if ((header === 'Priority' || header === 'Probability')) {\n               const value = cellValue.trim();\n               if (['High', 'Medium', 'Low'].includes(value)) {\n                  rowData[header as keyof SheetRow] = value as 'High' | 'Medium' | 'Low';\n               } else {\n                  if (value !== '') {\n                    // console.warn(`Invalid value \"${value}\" for ${header} in row. Defaulting to Medium.`);\n                  }\n                  rowData[header as keyof SheetRow] = 'Medium'; // Default if invalid or empty\n               }\n            } else {\n               rowData[header as keyof SheetRow] = cellValue;\n            }\n        }\n      });\n      // Ensure all expected keys exist, even if not in sheet headers or row is shorter\n      expectedHeaders.forEach(eh => {\n        const key = eh as keyof SheetRow;\n        if (!(key in rowData)) {\n          if (key === 'Priority' || key === 'Probability') {\n            rowData[key] = 'Medium'; \n          } else {\n            rowData[key] = ''; \n          }\n        }\n      });\n      return rowData as SheetRow;\n    }).filter(row => Object.values(row).some(val => typeof val === 'string' && val.trim() !== '')); // Filter out completely empty effective rows\n\n\n  } catch (error: any) {\n    console.error('CRITICAL ERROR in getSheetData:', error); \n    console.error('Error message:', error.message);\n    if (error.stack) console.error('Stack trace:', error.stack);\n    if (error.response?.data) console.error('Google API response error data:', error.response.data);\n    \n    if (error instanceof Error) {\n        if (error.message.includes('PERMISSION_DENIED')) {\n            console.error(`getSheetData Error: Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has at least read access to the Google Sheet (${SHEET_ID}).`);\n        } else if (error.message.includes('Requested entity was not found')) {\n            console.error(`getSheetData Error: Sheet or range not found. Verify GOOGLE_SHEET_ID (${SHEET_ID}) and GOOGLE_SHEET_RANGE (${SHEET_RANGE}).`);\n        } else if (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant')) {\n            console.error('getSheetData Error: Authentication failed. This could be due to an invalid service account email, private key, or incorrect project setup.');\n        } else if (error.message.includes('DECODER routines') || error.message.includes('PEM routines')) {\n            console.error('getSheetData Error: A cryptographic error occurred, often related to a malformed private key. Ensure GOOGLE_PRIVATE_KEY is correctly formatted in your environment.');\n        }\n    }\n    return []; \n  }\n}\n\nexport async function appendSheetRow(rowData: Omit<SheetRow, ''>): Promise<boolean> {\n  const sheets = await getSheetsClient();\n   if (!sheets) {\n      console.error(\"Cannot append row: Google Sheets client not available (possibly due to configuration issues).\");\n      return false;\n   }\n   if (!SHEET_ID) { \n     console.error(\"Cannot append row: GOOGLE_SHEET_ID is not configured.\");\n     return false;\n   }\n\n  const values = [\n    rowData['Donor/Opp'],\n    rowData['Action/Next Step'],\n    rowData.Lead,\n    rowData.Priority,\n    rowData.Probability\n  ];\n\n  try {\n    await sheets.spreadsheets.values.append({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE, \n      valueInputOption: 'USER_ENTERED', \n      insertDataOption: 'INSERT_ROWS', \n      requestBody: {\n        values: [values],\n      },\n    });\n    // console.log('Row appended successfully to Google Sheet.');\n    return true;\n  } catch (error: any) {\n    console.error('Error appending sheet row to Google Sheets API:', error.message);\n     if (error instanceof Error) {\n        if (error.message.includes('PERMISSION_DENIED')) {\n            console.error(`appendSheetRow Error: Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has write access to the Google Sheet (${SHEET_ID}).`);\n        } else if (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant')) {\n            console.error('appendSheetRow Error: Authentication failed while appending. Check service account credentials and permissions.');\n        }\n     }\n    return false;\n  }\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardTable() from the server but DashboardTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard-table.tsx <module evaluation>\",\n    \"DashboardTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oEACA","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardTable() from the server but DashboardTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard-table.tsx\",\n    \"DashboardTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gDACA","debugId":null}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\nimport { Suspense } from 'react';\nimport { getSheetData } from '@/lib/sheets';\nimport { DashboardTable } from '@/components/dashboard-table';\nimport { Skeleton } from '@/components/ui/skeleton';\n\n// Helper component for loading skeleton\nfunction TableSkeleton() {\n  return (\n    <div className=\"space-y-4\">\n       <div className=\"flex justify-end\">\n            <Skeleton className=\"h-10 w-[250px]\" />\n       </div>\n      <div className=\"rounded-md border\">\n        <div className=\"overflow-auto\">\n          <table className=\"w-full caption-bottom text-sm\">\n            <thead className=\"[&_tr]:border-b\">\n              <tr className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[150px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[200px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[100px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[80px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[100px]\" /></th>\n              </tr>\n            </thead>\n            <tbody className=\"[&_tr:last-child]:border-0\">\n              {[...Array(5)].map((_, i) => (\n                <tr key={i} className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Data fetching component wrapped for Suspense\nasync function DashboardData() {\n  // Add a small delay to simulate network latency if needed for testing skeleton\n  // await new Promise(resolve => setTimeout(resolve, 1000));\n  const data = await getSheetData();\n  return <DashboardTable initialData={data} />;\n}\n\nexport default function Home() {\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold text-primary\">NBD Dashboard</h1>\n      <p className=\"text-muted-foreground\">\n        Live Data\n      </p>\n      <Suspense fallback={<TableSkeleton />}>\n        <DashboardData />\n      </Suspense>\n    </div>\n  );\n}\n\n// Ensure dynamic rendering as data comes from an external source\nexport const dynamic = 'force-dynamic';\nexport const revalidate = 60; // Optional: Revalidate cache every 60 seconds\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;AACA;;;;;;AAEA,wCAAwC;AACxC,SAAS;IACP,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC;gBAAI,WAAU;0BACV,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAE1B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAM,WAAU;;0CACf,8OAAC;gCAAM,WAAU;0CACf,cAAA,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;0CAG3G,8OAAC;gCAAM,WAAU;0CACd;uCAAI,MAAM;iCAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC;wCAAW,WAAU;;0DACpB,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;uCAL9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAczB;AAEA,+CAA+C;AAC/C,eAAe;IACb,+EAA+E;IAC/E,2DAA2D;IAC3D,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD;IAC9B,qBAAO,8OAAC,wIAAA,CAAA,iBAAc;QAAC,aAAa;;;;;;AACtC;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAkC;;;;;;0BAChD,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;0BAGrC,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC;;;;;0BACnB,cAAA,8OAAC;;;;;;;;;;;;;;;;AAIT;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa,IAAI,8CAA8C","debugId":null}}]
}