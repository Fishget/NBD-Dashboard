{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/auth.ts"],"sourcesContent":["import { cookies } from 'next/headers';\nimport type { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\n\nconst AUTH_COOKIE_NAME = 'sheetsync_auth';\nconst ADMIN_USERNAME = process.env.ADMIN_USERNAME;\nconst ADMIN_PASSWORD = process.env.ADMIN_PASSWORD;\n\nif (!ADMIN_USERNAME || !ADMIN_PASSWORD) {\n  console.warn('Admin credentials are not set in environment variables. Admin login will not work.');\n}\n\nexport function checkCredentials(username?: string | null, password?: string | null): boolean {\n  if (!ADMIN_USERNAME || !ADMIN_PASSWORD) {\n    return false; // Cannot authenticate if credentials aren't set\n  }\n  return username === ADMIN_USERNAME && password === ADMIN_PASSWORD;\n}\n\nexport async function setAuthCookie(): Promise<void> {\n  const cookieStore = cookies();\n  cookieStore.set(AUTH_COOKIE_NAME, 'true', {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    path: '/admin', // Restrict cookie to admin paths\n    sameSite: 'lax',\n    maxAge: 60 * 60 * 24, // 24 hours validity\n  });\n}\n\nexport async function clearAuthCookie(): Promise<void> {\n  const cookieStore = cookies();\n  cookieStore.delete(AUTH_COOKIE_NAME);\n}\n\nexport function isAuthenticated(cookieStore?: ReadonlyRequestCookies): boolean {\n  const store = cookieStore || cookies();\n  const authCookie = store.get(AUTH_COOKIE_NAME);\n  return authCookie?.value === 'true';\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAGA,MAAM,mBAAmB;AACzB,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc;AACjD,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc;AAEjD,IAAI,CAAC,kBAAkB,CAAC,gBAAgB;IACtC,QAAQ,IAAI,CAAC;AACf;AAEO,SAAS,iBAAiB,QAAwB,EAAE,QAAwB;IACjF,IAAI,CAAC,kBAAkB,CAAC,gBAAgB;QACtC,OAAO,OAAO,gDAAgD;IAChE;IACA,OAAO,aAAa,kBAAkB,aAAa;AACrD;AAEO,eAAe;IACpB,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,YAAY,GAAG,CAAC,kBAAkB,QAAQ;QACxC,UAAU;QACV,QAAQ,oDAAyB;QACjC,MAAM;QACN,UAAU;QACV,QAAQ,KAAK,KAAK;IACpB;AACF;AAEO,eAAe;IACpB,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,YAAY,MAAM,CAAC;AACrB;AAEO,SAAS,gBAAgB,WAAoC;IAClE,MAAM,QAAQ,eAAe,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACnC,MAAM,aAAa,MAAM,GAAG,CAAC;IAC7B,OAAO,YAAY,UAAU;AAC/B","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/validators.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const loginSchema = z.object({\n  username: z.string().min(1, 'Username is required'),\n  password: z.string().min(1, 'Password is required'),\n});\n\nexport type LoginFormData = z.infer<typeof loginSchema>;\n\nexport const sheetRowSchema = z.object({\n  'Donor/Opp': z.string().min(1, 'Donor/Opportunity is required'),\n  'Action/Next Step': z.string().min(1, 'Action/Next Step is required'),\n  Lead: z.string().min(1, 'Lead is required'),\n  Priority: z.enum(['High', 'Medium', 'Low'], {\n    errorMap: () => ({ message: 'Please select a valid priority' }),\n  }),\n  Probability: z.enum(['High', 'Medium', 'Low'], {\n    errorMap: () => ({ message: 'Please select a valid probability' }),\n  }),\n});\n\nexport type SheetRowFormData = z.infer<typeof sheetRowSchema>;\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACtC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,UAAU,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAM,EAAE;QAC1C,UAAU,IAAM,CAAC;gBAAE,SAAS;YAAiC,CAAC;IAChE;IACA,aAAa,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAM,EAAE;QAC7C,UAAU,IAAM,CAAC;gBAAE,SAAS;YAAoC,CAAC;IACnE;AACF","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/sheets.ts"],"sourcesContent":["import { google } from 'googleapis';\nimport type { sheets_v4 } from 'googleapis';\n\n// Define the structure of a row in your sheet\nexport interface SheetRow {\n  'Donor/Opp': string;\n  'Action/Next Step': string;\n  Lead: string;\n  Priority: 'High' | 'Medium' | 'Low';\n  Probability: 'High' | 'Medium' | 'Low';\n}\n\n// Environment variables check\nconst SHEET_ID = process.env.GOOGLE_SHEET_ID;\nconst SERVICE_ACCOUNT_EMAIL = process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL;\nconst PRIVATE_KEY = process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'); // Handle newline characters\nconst SHEET_RANGE = process.env.GOOGLE_SHEET_RANGE || 'Sheet1!A:E'; // Default range if not specified\n\nif (!SHEET_ID || !SERVICE_ACCOUNT_EMAIL || !PRIVATE_KEY) {\n  console.error('Missing Google Sheets API credentials in environment variables.');\n  // Throwing an error might be better in production, but console log for dev\n  // throw new Error('Missing Google Sheets API credentials');\n}\n\nfunction getSheetsClient(): sheets_v4.Sheets | null {\n  if (!SHEET_ID || !SERVICE_ACCOUNT_EMAIL || !PRIVATE_KEY) {\n    console.error('Cannot initialize Sheets client due to missing credentials.');\n    return null;\n  }\n\n  const auth = new google.auth.GoogleAuth({\n    credentials: {\n      client_email: SERVICE_ACCOUNT_EMAIL,\n      private_key: PRIVATE_KEY,\n    },\n    scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n  });\n\n  return google.sheets({ version: 'v4', auth });\n}\n\nexport async function getSheetData(): Promise<SheetRow[]> {\n  const sheets = getSheetsClient();\n  if (!sheets || !SHEET_ID) return [];\n\n  try {\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE,\n    });\n\n    const rows = response.data.values;\n    if (!rows || rows.length === 0) {\n      return [];\n    }\n\n    // Assuming the first row is headers\n    const headers = rows[0].map(header => header.trim());\n    const dataRows = rows.slice(1);\n\n    const expectedHeaders = ['Donor/Opp', 'Action/Next Step', 'Lead', 'Priority', 'Probability'];\n    if (JSON.stringify(headers) !== JSON.stringify(expectedHeaders)) {\n       console.warn(`Sheet headers [${headers.join(', ')}] do not match expected headers [${expectedHeaders.join(', ')}]. Data mapping might be incorrect.`);\n    }\n\n    return dataRows.map((row) => {\n      const rowData: Partial<SheetRow> = {};\n      headers.forEach((header, index) => {\n        // Basic validation for Priority/Probability - adjust as needed\n        if ((header === 'Priority' || header === 'Probability') && row[index]) {\n           const value = row[index].trim();\n           if (['High', 'Medium', 'Low'].includes(value)) {\n              rowData[header as keyof SheetRow] = value as 'High' | 'Medium' | 'Low';\n           } else {\n              console.warn(`Invalid value \"${value}\" for ${header} in row. Defaulting to Medium.`);\n              rowData[header as keyof SheetRow] = 'Medium'; // Default or handle error\n           }\n        } else {\n           rowData[header as keyof SheetRow] = row[index] || ''; // Assign empty string if cell is blank\n        }\n      });\n      // Ensure all properties exist, even if empty\n      expectedHeaders.forEach(header => {\n        if (!(header in rowData)) {\n          rowData[header as keyof SheetRow] = '' as any; // Add missing properties as empty string or default\n        }\n      });\n      return rowData as SheetRow;\n    }).filter(row => Object.values(row).some(val => val !== '')); // Filter out completely empty rows if necessary\n\n  } catch (error) {\n    console.error('Error fetching sheet data:', error);\n    // Depending on the error type, you might want to handle it differently\n    if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has access to the Google Sheet (${SHEET_ID}).`);\n    } else if (error instanceof Error && error.message.includes('Requested entity was not found')) {\n        console.error(`Sheet or range not found. Verify SHEET_ID (${SHEET_ID}) and SHEET_RANGE (${SHEET_RANGE}).`);\n    }\n    return []; // Return empty array on error\n  }\n}\n\nexport async function appendSheetRow(rowData: Omit<SheetRow, ''>): Promise<boolean> {\n  const sheets = getSheetsClient();\n   if (!sheets || !SHEET_ID) {\n      console.error(\"Cannot append row: Sheets client not initialized or SHEET_ID missing.\");\n      return false;\n   }\n\n  // Ensure the order matches the sheet columns A:E\n  const values = [\n    rowData['Donor/Opp'],\n    rowData['Action/Next Step'],\n    rowData.Lead,\n    rowData.Priority,\n    rowData.Probability\n  ];\n\n  try {\n    await sheets.spreadsheets.values.append({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE, // Append to the specified range\n      valueInputOption: 'USER_ENTERED', // Interpret data as if user typed it\n      requestBody: {\n        values: [values],\n      },\n    });\n    console.log('Row appended successfully');\n    return true;\n  } catch (error) {\n    console.error('Error appending sheet row:', error);\n     if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has write access to the Google Sheet (${SHEET_ID}).`);\n    }\n    return false;\n  }\n}\n\n// Placeholder for editing/updating existing rows if needed in the future\n// export async function updateSheetRow(rowIndex: number, rowData: SheetRow): Promise<boolean> {\n//   const sheets = getSheetsClient();\n//   if (!sheets || !SHEET_ID) return false;\n//   // Implementation would involve finding the correct row index (potentially +2 if header exists and 0-indexed)\n//   // and using sheets.spreadsheets.values.update\n//   console.log(`Updating row ${rowIndex} - Not implemented yet`);\n//   return false;\n// }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { checkCredentials, setAuthCookie, clearAuthCookie } from './auth';\nimport { loginSchema, sheetRowSchema } from './validators';\nimport { appendSheetRow } from './sheets';\nimport type { SheetRowFormData } from './validators';\n\nexport type FormState = {\n  message: string;\n  success: boolean;\n  errors?: Record<string, string[] | undefined>;\n};\n\nexport async function loginAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n  try {\n    const parsed = loginSchema.safeParse({\n      username: formData.get('username'),\n      password: formData.get('password'),\n    });\n\n    if (!parsed.success) {\n      return {\n        message: 'Invalid form data.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const { username, password } = parsed.data;\n\n    if (checkCredentials(username, password)) {\n      await setAuthCookie();\n       // Revalidate admin path to trigger UI update after login\n      revalidatePath('/admin');\n      return { message: 'Login successful!', success: true };\n    } else {\n      return { message: 'Invalid username or password.', success: false };\n    }\n  } catch (error) {\n    console.error('Login error:', error);\n    return { message: 'An unexpected error occurred during login.', success: false };\n  }\n}\n\nexport async function logoutAction(): Promise<void> {\n   await clearAuthCookie();\n   // Revalidate admin path to trigger UI update after logout\n   revalidatePath('/admin');\n}\n\n\nexport async function submitDataAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n\n  try {\n    const parsed = sheetRowSchema.safeParse({\n      'Donor/Opp': formData.get('Donor/Opp'),\n      'Action/Next Step': formData.get('Action/Next Step'),\n      Lead: formData.get('Lead'),\n      Priority: formData.get('Priority'),\n      Probability: formData.get('Probability'),\n    });\n\n    if (!parsed.success) {\n       console.log(\"Validation errors:\", parsed.error.flatten().fieldErrors);\n      return {\n        message: 'Invalid form data. Please check the fields.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const dataToAppend: SheetRowFormData = parsed.data;\n\n    const success = await appendSheetRow(dataToAppend);\n\n    if (success) {\n      // Revalidate the homepage cache to show the new data\n      revalidatePath('/');\n      return { message: 'Data submitted successfully!', success: true };\n    } else {\n      return { message: 'Failed to submit data to Google Sheet.', success: false };\n    }\n  } catch (error) {\n    console.error('Submit data error:', error);\n    return { message: 'An unexpected error occurred while submitting data.', success: false };\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;;;;;;AASO,eAAe,uCAAS,GAAT,YACpB,SAA2B,EAC3B,QAAkB;IAElB,IAAI;QACF,MAAM,SAAS,wHAAA,CAAA,cAAW,CAAC,SAAS,CAAC;YACnC,UAAU,SAAS,GAAG,CAAC;YACvB,UAAU,SAAS,GAAG,CAAC;QACzB;QAEA,IAAI,CAAC,OAAO,OAAO,EAAE;YACnB,OAAO;gBACL,SAAS;gBACT,SAAS;gBACT,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;YAC5C;QACF;QAEA,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,IAAI;QAE1C,IAAI,CAAA,GAAA,kHAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU,WAAW;YACxC,MAAM,CAAA,GAAA,kHAAA,CAAA,gBAAa,AAAD;YACjB,yDAAyD;YAC1D,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;YACf,OAAO;gBAAE,SAAS;gBAAqB,SAAS;YAAK;QACvD,OAAO;YACL,OAAO;gBAAE,SAAS;gBAAiC,SAAS;YAAM;QACpE;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO;YAAE,SAAS;YAA8C,SAAS;QAAM;IACjF;AACF;AAEO,eAAe,uCAAU,GAAV;IACnB,MAAM,CAAA,GAAA,kHAAA,CAAA,kBAAe,AAAD;IACpB,0DAA0D;IAC1D,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;AAClB;AAGO,eAAe,uCAAc,GAAd,iBACpB,SAA2B,EAC3B,QAAkB;IAGlB,IAAI;QACF,MAAM,SAAS,wHAAA,CAAA,iBAAc,CAAC,SAAS,CAAC;YACtC,aAAa,SAAS,GAAG,CAAC;YAC1B,oBAAoB,SAAS,GAAG,CAAC;YACjC,MAAM,SAAS,GAAG,CAAC;YACnB,UAAU,SAAS,GAAG,CAAC;YACvB,aAAa,SAAS,GAAG,CAAC;QAC5B;QAEA,IAAI,CAAC,OAAO,OAAO,EAAE;YAClB,QAAQ,GAAG,CAAC,sBAAsB,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;YACrE,OAAO;gBACL,SAAS;gBACT,SAAS;gBACT,QAAQ,OAAO,KAAK,CAAC,OAAO,GAAG,WAAW;YAC5C;QACF;QAEA,MAAM,eAAiC,OAAO,IAAI;QAElD,MAAM,UAAU,MAAM,CAAA,GAAA,oHAAA,CAAA,iBAAc,AAAD,EAAE;QAErC,IAAI,SAAS;YACX,qDAAqD;YACrD,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;YACf,OAAO;gBAAE,SAAS;gBAAgC,SAAS;YAAK;QAClE,OAAO;YACL,OAAO;gBAAE,SAAS;gBAA0C,SAAS;YAAM;QAC7E;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO;YAAE,SAAS;YAAuD,SAAS;QAAM;IAC1F;AACF;;;IA/EsB;IAkCA;IAOA;;AAzCA,+OAAA;AAkCA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/login-form.tsx <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+DACA","debugId":null}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/login-form.tsx\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2CACA","debugId":null}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AdminForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AdminForm() from the server but AdminForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin-form.tsx <module evaluation>\",\n    \"AdminForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+DACA","debugId":null}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AdminForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AdminForm() from the server but AdminForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin-form.tsx\",\n    \"AdminForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2CACA","debugId":null}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logout-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutButton() from the server but LogoutButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/logout-button.tsx <module evaluation>\",\n    \"LogoutButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kEACA","debugId":null}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logout-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutButton() from the server but LogoutButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/logout-button.tsx\",\n    \"LogoutButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8CACA","debugId":null}},
    {"offset": {"line": 690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/page.tsx"],"sourcesContent":["import { cookies } from 'next/headers';\nimport { isAuthenticated } from '@/lib/auth';\nimport { LoginForm } from '@/components/login-form';\nimport { AdminForm } from '@/components/admin-form';\nimport { LogoutButton } from '@/components/logout-button';\n\nexport default function AdminPage() {\n  const cookieStore = cookies();\n  const loggedIn = isAuthenticated(cookieStore);\n\n  return (\n    <div className=\"space-y-6\">\n      {loggedIn ? (\n        <>\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-3xl font-bold\">Admin Panel</h1>\n            <LogoutButton />\n          </div>\n          <p className=\"text-muted-foreground\">Add new entries to the Google Sheet.</p>\n          <AdminForm />\n        </>\n      ) : (\n        <LoginForm />\n      )}\n    </div>\n  );\n}\n\n// Ensure dynamic rendering because authentication depends on cookies\nexport const dynamic = 'force-dynamic';\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEe,SAAS;IACtB,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,MAAM,WAAW,CAAA,GAAA,kHAAA,CAAA,kBAAe,AAAD,EAAE;IAEjC,qBACE,8OAAC;QAAI,WAAU;kBACZ,yBACC;;8BACE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,8OAAC,sIAAA,CAAA,eAAY;;;;;;;;;;;8BAEf,8OAAC;oBAAE,WAAU;8BAAwB;;;;;;8BACrC,8OAAC,mIAAA,CAAA,YAAS;;;;;;yCAGZ,8OAAC,mIAAA,CAAA,YAAS;;;;;;;;;;AAIlB;AAGO,MAAM,UAAU","debugId":null}}]
}