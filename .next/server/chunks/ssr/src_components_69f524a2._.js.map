{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 694, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/charts/opportunities-by-lead-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis, Cell } from 'recharts';\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport type { SheetRow } from '@/lib/sheets';\nimport type { ChartFilterType } from '@/components/dashboard-table';\n\ninterface OpportunitiesByLeadChartProps {\n  data: SheetRow[];\n  onFilter: (filter: ChartFilterType) => void;\n  currentFilter: ChartFilterType;\n}\n\nconst chartConfig = {\n  count: {\n    label: 'Opportunities',\n  },\n} satisfies ChartConfig;\n\n// Predefined color palette for leads\nconst leadColors = [\n  'hsl(var(--chart-1))',\n  'hsl(var(--chart-2))',\n  'hsl(var(--chart-3))',\n  'hsl(var(--chart-4))',\n  'hsl(var(--chart-5))',\n  'hsl(var(--primary))', // Use primary as a fallback or additional color\n];\n\n\nexport function OpportunitiesByLeadChart({ data, onFilter, currentFilter }: OpportunitiesByLeadChartProps) {\n  const leadCounts = React.useMemo(() => {\n    const counts: { [key: string]: number } = {};\n    data.forEach(row => {\n      if (row.Lead) { // Ensure lead is not empty\n        counts[row.Lead] = (counts[row.Lead] || 0) + 1;\n      }\n    });\n    return Object.entries(counts)\n      .map(([lead, count]) => ({ name: lead, count }))\n      .sort((a,b) => b.count - a.count); // Sort by count descending\n  }, [data]);\n\n  const getLeadColor = (index: number) => leadColors[index % leadColors.length];\n\n  const activeLead = currentFilter && 'lead' in currentFilter ? currentFilter.lead : null;\n\n  return (\n    <ChartContainer config={chartConfig} className=\"min-h-[250px] w-full\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={leadCounts} margin={{ top: 5, right: 20, left: 0, bottom: 70 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n          <XAxis \n            dataKey=\"name\" \n            angle={-45} \n            textAnchor=\"end\" \n            interval={0} \n            height={80} \n            tick={{ fontSize: 12 }}\n          />\n          <YAxis allowDecimals={false} tick={{ fontSize: 12 }} />\n          <ChartTooltip\n            cursor={false}\n            content={<ChartTooltipContent indicator=\"dot\" />}\n          />\n          <Bar \n            dataKey=\"count\" \n            radius={3}\n            onClick={(barData) => onFilter({ lead: barData.name as string })}\n          >\n            {leadCounts.map((entry, index) => (\n              <Cell\n                key={`cell-${entry.name}-${index}`}\n                fill={activeLead === entry.name ? 'hsl(var(--ring))' : getLeadColor(index)}\n                className=\"cursor-pointer transition-opacity hover:opacity-80\"\n              />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAcA,MAAM,cAAc;IAClB,OAAO;QACL,OAAO;IACT;AACF;AAEA,qCAAqC;AACrC,MAAM,aAAa;IACjB;IACA;IACA;IACA;IACA;IACA;CACD;AAGM,SAAS,yBAAyB,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAiC;IACvG,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QAC/B,MAAM,SAAoC,CAAC;QAC3C,KAAK,OAAO,CAAC,CAAA;YACX,IAAI,IAAI,IAAI,EAAE;gBACZ,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI;YAC/C;QACF;QACA,OAAO,OAAO,OAAO,CAAC,QACnB,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,GAAK,CAAC;gBAAE,MAAM;gBAAM;YAAM,CAAC,GAC7C,IAAI,CAAC,CAAC,GAAE,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,2BAA2B;IAClE,GAAG;QAAC;KAAK;IAET,MAAM,eAAe,CAAC,QAAkB,UAAU,CAAC,QAAQ,WAAW,MAAM,CAAC;IAE7E,MAAM,aAAa,iBAAiB,UAAU,gBAAgB,cAAc,IAAI,GAAG;IAEnF,qBACE,8OAAC,iIAAA,CAAA,iBAAc;QAAC,QAAQ;QAAa,WAAU;kBAC7C,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;YAAC,OAAM;YAAO,QAAQ;sBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;gBAAC,MAAM;gBAAY,QAAQ;oBAAE,KAAK;oBAAG,OAAO;oBAAI,MAAM;oBAAG,QAAQ;gBAAG;;kCAC3E,8OAAC,6JAAA,CAAA,gBAAa;wBAAC,iBAAgB;wBAAM,UAAU;;;;;;kCAC/C,8OAAC,qJAAA,CAAA,QAAK;wBACJ,SAAQ;wBACR,OAAO,CAAC;wBACR,YAAW;wBACX,UAAU;wBACV,QAAQ;wBACR,MAAM;4BAAE,UAAU;wBAAG;;;;;;kCAEvB,8OAAC,qJAAA,CAAA,QAAK;wBAAC,eAAe;wBAAO,MAAM;4BAAE,UAAU;wBAAG;;;;;;kCAClD,8OAAC,iIAAA,CAAA,eAAY;wBACX,QAAQ;wBACR,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;4BAAC,WAAU;;;;;;;;;;;kCAE1C,8OAAC,mJAAA,CAAA,MAAG;wBACF,SAAQ;wBACR,QAAQ;wBACR,SAAS,CAAC,UAAY,SAAS;gCAAE,MAAM,QAAQ,IAAI;4BAAW;kCAE7D,WAAW,GAAG,CAAC,CAAC,OAAO,sBACtB,8OAAC,oJAAA,CAAA,OAAI;gCAEH,MAAM,eAAe,MAAM,IAAI,GAAG,qBAAqB,aAAa;gCACpE,WAAU;+BAFL,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAAC,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;AAUlD","debugId":null}},
    {"offset": {"line": 846, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/charts/opportunities-by-priority-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis, Cell } from 'recharts';\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport type { SheetRow } from '@/lib/sheets';\nimport type { ChartFilterType } from '@/components/dashboard-table';\n\ninterface OpportunitiesByPriorityChartProps {\n  data: SheetRow[];\n  onFilter: (filter: ChartFilterType) => void;\n  currentFilter: ChartFilterType;\n}\n\nconst priorityOrder: ('High' | 'Medium' | 'Low')[] = ['High', 'Medium', 'Low'];\n\nconst chartConfig = {\n  count: {\n    label: 'Opportunities',\n  },\n  High: { label: 'High', color: 'hsl(var(--chart-color-high))' },\n  Medium: { label: 'Medium', color: 'hsl(var(--chart-color-medium))' },\n  Low: { label: 'Low', color: 'hsl(var(--chart-color-low))' },\n} satisfies ChartConfig;\n\nexport function OpportunitiesByPriorityChart({ data, onFilter, currentFilter }: OpportunitiesByPriorityChartProps) {\n  const priorityCounts = React.useMemo(() => {\n    const counts: { High: number; Medium: number; Low: number } = { High: 0, Medium: 0, Low: 0 };\n    data.forEach(row => {\n      if (row.Priority && counts[row.Priority] !== undefined) {\n        counts[row.Priority]++;\n      }\n    });\n    return priorityOrder.map(priority => ({ name: priority, count: counts[priority] }));\n  }, [data]);\n\n  const activePriority = currentFilter && 'priority' in currentFilter ? currentFilter.priority : null;\n\n  return (\n    <ChartContainer config={chartConfig} className=\"min-h-[250px] w-full\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={priorityCounts} layout=\"vertical\" margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" horizontal={false} />\n          <XAxis type=\"number\" allowDecimals={false} tick={{ fontSize: 12 }} />\n          <YAxis \n            dataKey=\"name\" \n            type=\"category\" \n            tickLine={false} \n            axisLine={false} \n            tick={{ fontSize: 12 }} \n            width={80}\n          />\n          <ChartTooltip\n            cursor={false}\n            content={<ChartTooltipContent indicator=\"dot\" />}\n          />\n          <Bar \n            dataKey=\"count\" \n            layout=\"vertical\" \n            radius={3}\n            onClick={(barData) => onFilter({ priority: barData.name as string })}\n          >\n            {priorityCounts.map((entry) => (\n              <Cell\n                key={`cell-${entry.name}`}\n                fill={activePriority === entry.name ? 'hsl(var(--ring))' : chartConfig[entry.name as keyof typeof chartConfig].color}\n                className=\"cursor-pointer transition-opacity hover:opacity-80\"\n              />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAcA,MAAM,gBAA+C;IAAC;IAAQ;IAAU;CAAM;AAE9E,MAAM,cAAc;IAClB,OAAO;QACL,OAAO;IACT;IACA,MAAM;QAAE,OAAO;QAAQ,OAAO;IAA+B;IAC7D,QAAQ;QAAE,OAAO;QAAU,OAAO;IAAiC;IACnE,KAAK;QAAE,OAAO;QAAO,OAAO;IAA8B;AAC5D;AAEO,SAAS,6BAA6B,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAqC;IAC/G,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QACnC,MAAM,SAAwD;YAAE,MAAM;YAAG,QAAQ;YAAG,KAAK;QAAE;QAC3F,KAAK,OAAO,CAAC,CAAA;YACX,IAAI,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAI,QAAQ,CAAC,KAAK,WAAW;gBACtD,MAAM,CAAC,IAAI,QAAQ,CAAC;YACtB;QACF;QACA,OAAO,cAAc,GAAG,CAAC,CAAA,WAAY,CAAC;gBAAE,MAAM;gBAAU,OAAO,MAAM,CAAC,SAAS;YAAC,CAAC;IACnF,GAAG;QAAC;KAAK;IAET,MAAM,iBAAiB,iBAAiB,cAAc,gBAAgB,cAAc,QAAQ,GAAG;IAE/F,qBACE,8OAAC,iIAAA,CAAA,iBAAc;QAAC,QAAQ;QAAa,WAAU;kBAC7C,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;YAAC,OAAM;YAAO,QAAQ;sBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;gBAAC,MAAM;gBAAgB,QAAO;gBAAW,QAAQ;oBAAE,KAAK;oBAAG,OAAO;oBAAI,MAAM;oBAAI,QAAQ;gBAAE;;kCACjG,8OAAC,6JAAA,CAAA,gBAAa;wBAAC,iBAAgB;wBAAM,YAAY;;;;;;kCACjD,8OAAC,qJAAA,CAAA,QAAK;wBAAC,MAAK;wBAAS,eAAe;wBAAO,MAAM;4BAAE,UAAU;wBAAG;;;;;;kCAChE,8OAAC,qJAAA,CAAA,QAAK;wBACJ,SAAQ;wBACR,MAAK;wBACL,UAAU;wBACV,UAAU;wBACV,MAAM;4BAAE,UAAU;wBAAG;wBACrB,OAAO;;;;;;kCAET,8OAAC,iIAAA,CAAA,eAAY;wBACX,QAAQ;wBACR,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;4BAAC,WAAU;;;;;;;;;;;kCAE1C,8OAAC,mJAAA,CAAA,MAAG;wBACF,SAAQ;wBACR,QAAO;wBACP,QAAQ;wBACR,SAAS,CAAC,UAAY,SAAS;gCAAE,UAAU,QAAQ,IAAI;4BAAW;kCAEjE,eAAe,GAAG,CAAC,CAAC,sBACnB,8OAAC,oJAAA,CAAA,OAAI;gCAEH,MAAM,mBAAmB,MAAM,IAAI,GAAG,qBAAqB,WAAW,CAAC,MAAM,IAAI,CAA6B,CAAC,KAAK;gCACpH,WAAU;+BAFL,CAAC,KAAK,EAAE,MAAM,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;AAUzC","debugId":null}},
    {"offset": {"line": 1012, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/charts/opportunities-by-probability-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis, Cell } from 'recharts';\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport type { SheetRow } from '@/lib/sheets';\nimport type { ChartFilterType } from '@/components/dashboard-table';\n\ninterface OpportunitiesByProbabilityChartProps {\n  data: SheetRow[];\n  onFilter: (filter: ChartFilterType) => void;\n  currentFilter: ChartFilterType;\n}\n\nconst probabilityOrder: ('High' | 'Medium' | 'Low')[] = ['High', 'Medium', 'Low'];\n\nconst chartConfig = {\n  count: {\n    label: 'Opportunities',\n  },\n  High: { label: 'High', color: 'hsl(var(--chart-color-high))' },\n  Medium: { label: 'Medium', color: 'hsl(var(--chart-color-medium))' },\n  Low: { label: 'Low', color: 'hsl(var(--chart-color-low))' },\n} satisfies ChartConfig;\n\nexport function OpportunitiesByProbabilityChart({ data, onFilter, currentFilter }: OpportunitiesByProbabilityChartProps) {\n  const probabilityCounts = React.useMemo(() => {\n    const counts: { High: number; Medium: number; Low: number } = { High: 0, Medium: 0, Low: 0 };\n    data.forEach(row => {\n      if (row.Probability && counts[row.Probability] !== undefined) {\n        counts[row.Probability]++;\n      }\n    });\n    return probabilityOrder.map(probability => ({ name: probability, count: counts[probability] }));\n  }, [data]);\n  \n  const activeProbability = currentFilter && 'probability' in currentFilter && !('priority' in currentFilter) ? currentFilter.probability : null;\n\n\n  return (\n    <ChartContainer config={chartConfig} className=\"min-h-[250px] w-full\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={probabilityCounts} layout=\"vertical\" margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" horizontal={false} />\n          <XAxis type=\"number\" allowDecimals={false} tick={{ fontSize: 12 }} />\n          <YAxis \n            dataKey=\"name\" \n            type=\"category\" \n            tickLine={false} \n            axisLine={false} \n            tick={{ fontSize: 12 }} \n            width={80}\n          />\n          <ChartTooltip\n            cursor={false}\n            content={<ChartTooltipContent indicator=\"dot\" />}\n          />\n          <Bar \n            dataKey=\"count\" \n            layout=\"vertical\" \n            radius={3}\n            onClick={(barData) => onFilter({ probability: barData.name as string })}\n          >\n            {probabilityCounts.map((entry) => (\n              <Cell\n                key={`cell-${entry.name}`}\n                fill={activeProbability === entry.name ? 'hsl(var(--ring))' : chartConfig[entry.name as keyof typeof chartConfig].color}\n                className=\"cursor-pointer transition-opacity hover:opacity-80\"\n              />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAcA,MAAM,mBAAkD;IAAC;IAAQ;IAAU;CAAM;AAEjF,MAAM,cAAc;IAClB,OAAO;QACL,OAAO;IACT;IACA,MAAM;QAAE,OAAO;QAAQ,OAAO;IAA+B;IAC7D,QAAQ;QAAE,OAAO;QAAU,OAAO;IAAiC;IACnE,KAAK;QAAE,OAAO;QAAO,OAAO;IAA8B;AAC5D;AAEO,SAAS,gCAAgC,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAwC;IACrH,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QACtC,MAAM,SAAwD;YAAE,MAAM;YAAG,QAAQ;YAAG,KAAK;QAAE;QAC3F,KAAK,OAAO,CAAC,CAAA;YACX,IAAI,IAAI,WAAW,IAAI,MAAM,CAAC,IAAI,WAAW,CAAC,KAAK,WAAW;gBAC5D,MAAM,CAAC,IAAI,WAAW,CAAC;YACzB;QACF;QACA,OAAO,iBAAiB,GAAG,CAAC,CAAA,cAAe,CAAC;gBAAE,MAAM;gBAAa,OAAO,MAAM,CAAC,YAAY;YAAC,CAAC;IAC/F,GAAG;QAAC;KAAK;IAET,MAAM,oBAAoB,iBAAiB,iBAAiB,iBAAiB,CAAC,CAAC,cAAc,aAAa,IAAI,cAAc,WAAW,GAAG;IAG1I,qBACE,8OAAC,iIAAA,CAAA,iBAAc;QAAC,QAAQ;QAAa,WAAU;kBAC7C,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;YAAC,OAAM;YAAO,QAAQ;sBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;gBAAC,MAAM;gBAAmB,QAAO;gBAAW,QAAQ;oBAAE,KAAK;oBAAG,OAAO;oBAAI,MAAM;oBAAI,QAAQ;gBAAE;;kCACpG,8OAAC,6JAAA,CAAA,gBAAa;wBAAC,iBAAgB;wBAAM,YAAY;;;;;;kCACjD,8OAAC,qJAAA,CAAA,QAAK;wBAAC,MAAK;wBAAS,eAAe;wBAAO,MAAM;4BAAE,UAAU;wBAAG;;;;;;kCAChE,8OAAC,qJAAA,CAAA,QAAK;wBACJ,SAAQ;wBACR,MAAK;wBACL,UAAU;wBACV,UAAU;wBACV,MAAM;4BAAE,UAAU;wBAAG;wBACrB,OAAO;;;;;;kCAET,8OAAC,iIAAA,CAAA,eAAY;wBACX,QAAQ;wBACR,uBAAS,8OAAC,iIAAA,CAAA,sBAAmB;4BAAC,WAAU;;;;;;;;;;;kCAE1C,8OAAC,mJAAA,CAAA,MAAG;wBACF,SAAQ;wBACR,QAAO;wBACP,QAAQ;wBACR,SAAS,CAAC,UAAY,SAAS;gCAAE,aAAa,QAAQ,IAAI;4BAAW;kCAEpE,kBAAkB,GAAG,CAAC,CAAC,sBACtB,8OAAC,oJAAA,CAAA,OAAI;gCAEH,MAAM,sBAAsB,MAAM,IAAI,GAAG,qBAAqB,WAAW,CAAC,MAAM,IAAI,CAA6B,CAAC,KAAK;gCACvH,WAAU;+BAFL,CAAC,KAAK,EAAE,MAAM,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;AAUzC","debugId":null}},
    {"offset": {"line": 1178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/charts/priority-probability-matrix.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport type { SheetRow } from '@/lib/sheets';\nimport { cn } from '@/lib/utils';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport type { ChartFilterType } from '@/components/dashboard-table';\n\ninterface PriorityProbabilityMatrixProps {\n  data: SheetRow[];\n  onFilter: (filter: ChartFilterType) => void;\n  currentFilter: ChartFilterType;\n}\n\nconst priorities: ('High' | 'Medium' | 'Low')[] = ['High', 'Medium', 'Low'];\nconst probabilities: ('High' | 'Medium' | 'Low')[] = ['High', 'Medium', 'Low'];\n\nconst getPriorityColor = (priority: 'High' | 'Medium' | 'Low'): string => {\n  if (priority === 'High') return 'hsl(var(--chart-color-high))';\n  if (priority === 'Medium') return 'hsl(var(--chart-color-medium))';\n  return 'hsl(var(--chart-color-low))';\n};\n\nexport function PriorityProbabilityMatrix({ data, onFilter, currentFilter }: PriorityProbabilityMatrixProps) {\n  const matrixData = React.useMemo(() => {\n    const matrix: { [priority: string]: { [probability: string]: number } } = {\n      High: { High: 0, Medium: 0, Low: 0 },\n      Medium: { High: 0, Medium: 0, Low: 0 },\n      Low: { High: 0, Medium: 0, Low: 0 },\n    };\n    data.forEach(row => {\n      if (\n        priorities.includes(row.Priority) &&\n        probabilities.includes(row.Probability) &&\n        matrix[row.Priority] && \n        matrix[row.Priority][row.Probability] !== undefined\n      ) {\n        matrix[row.Priority][row.Probability]++;\n      }\n    });\n    return matrix;\n  }, [data]);\n\n  const maxCount = React.useMemo(() => {\n    let max = 0;\n    priorities.forEach(p => {\n      probabilities.forEach(prob => {\n        if (matrixData[p][prob] > max) {\n          max = matrixData[p][prob];\n        }\n      });\n    });\n    return max === 0 ? 1 : max; // Avoid division by zero if all counts are 0\n  }, [matrixData]);\n\n  const activePriority = currentFilter && 'priority' in currentFilter ? currentFilter.priority : null;\n  const activeProbability = currentFilter && 'probability' in currentFilter ? currentFilter.probability : null;\n\n  return (\n    <TooltipProvider>\n      <div className=\"grid grid-cols-4 gap-1 w-full max-w-md mx-auto aspect-square\">\n        {/* Corner Cell for Labels */}\n        <div className=\"flex items-center justify-center text-xs font-medium text-muted-foreground\"></div>\n        {/* Probability Labels (Top Row) */}\n        {probabilities.map(prob => (\n          <div key={`label-prob-${prob}`} className=\"flex items-center justify-center p-1 text-xs font-medium text-muted-foreground\">\n            {prob}\n          </div>\n        ))}\n\n        {priorities.map(priority => (\n          <React.Fragment key={`row-${priority}`}>\n            {/* Priority Label (First Column) */}\n            <div className=\"flex items-center justify-center p-1 text-xs font-medium text-muted-foreground\">\n              {priority}\n            </div>\n            {/* Data Cells */}\n            {probabilities.map(probability => {\n              const count = matrixData[priority][probability];\n              const opacity = count > 0 ? Math.max(0.2, count / maxCount) : 0.1; // Ensure some visibility for 0 counts if needed, or use 0\n              const isActive = activePriority === priority && activeProbability === probability;\n\n              return (\n                <Tooltip key={`${priority}-${probability}`}>\n                  <TooltipTrigger asChild>\n                    <div\n                      onClick={() => onFilter({ priority, probability })}\n                      className={cn(\n                        \"flex items-center justify-center p-2 border rounded-md cursor-pointer transition-all aspect-square\",\n                        \"hover:ring-2 hover:ring-offset-2 hover:ring-primary\",\n                        isActive && \"ring-2 ring-offset-2 ring-primary shadow-lg\",\n                      )}\n                      style={{\n                        backgroundColor: getPriorityColor(priority),\n                        opacity: isActive ? 1 : opacity, // Full opacity if active\n                      }}\n                      data-testid={`matrix-cell-${priority}-${probability}`}\n                    >\n                      <span className={cn(\n                        \"font-bold text-lg\",\n                        count > maxCount / 2 ? \"text-white\" : \"text-black\" // Simple contrast logic\n                      )}>\n                        {count}\n                      </span>\n                    </div>\n                  </TooltipTrigger>\n                  <TooltipContent>\n                    <p>Priority: {priority}</p>\n                    <p>Probability: {probability}</p>\n                    <p>Count: {count}</p>\n                  </TooltipContent>\n                </Tooltip>\n              );\n            })}\n          </React.Fragment>\n        ))}\n      </div>\n    </TooltipProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1420, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1501, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n} from '@/components/ui/table';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { ArrowUpDown, ChevronLeft, ChevronRight, BarChart2, Eye, EyeOff, FilterX } from 'lucide-react';\nimport type { SheetRow } from '@/lib/sheets';\nimport { cn } from '@/lib/utils';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { OpportunitiesByLeadChart } from '@/components/charts/opportunities-by-lead-chart';\nimport { OpportunitiesByPriorityChart } from '@/components/charts/opportunities-by-priority-chart';\nimport { OpportunitiesByProbabilityChart } from '@/components/charts/opportunities-by-probability-chart';\nimport { PriorityProbabilityMatrix } from '@/components/charts/priority-probability-matrix';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\n\ninterface DashboardTableProps {\n  initialData: SheetRow[];\n}\n\ntype SortKey = keyof SheetRow | null;\ntype SortDirection = 'asc' | 'desc';\nexport type ChartFilterType = Record<string, string | number> | null;\n\n\nexport function DashboardTable({ initialData }: DashboardTableProps) {\n  const [data, setData] = React.useState<SheetRow[]>(initialData);\n  const [filter, setFilter] = React.useState<string>('');\n  const [sortKey, setSortKey] = React.useState<SortKey>(null);\n  const [sortDirection, setSortDirection] = React.useState<SortDirection>('asc');\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n\n  const [showCharts, setShowCharts] = React.useState(false);\n  const [chartFilter, setChartFilter] = React.useState<ChartFilterType>(null);\n\n  React.useEffect(() => {\n    setData(initialData);\n    setCurrentPage(1); // Reset page when initial data changes\n  } , [initialData]);\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilter(event.target.value.toLowerCase());\n    setCurrentPage(1); // Reset page when filter changes\n  };\n\n  const handleSort = (key: keyof SheetRow) => {\n    if (sortKey === key) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortKey(key);\n      setSortDirection('asc');\n    }\n    setCurrentPage(1); // Reset page when sort changes\n  };\n\n  const toggleCharts = () => setShowCharts(prev => !prev);\n\n  const handleChartFilter = (newFilter: ChartFilterType) => {\n    setChartFilter(prevFilter => {\n      // If the new filter is the same as the current one, clear it (toggle behavior)\n      if (JSON.stringify(prevFilter) === JSON.stringify(newFilter)) {\n        return null;\n      }\n      return newFilter;\n    });\n    setCurrentPage(1);\n  };\n\n  const resetChartFilters = () => {\n    setChartFilter(null);\n    setCurrentPage(1);\n  };\n\n  const textFilteredData = React.useMemo(() => {\n    if (!filter) return data;\n    return data.filter((row) =>\n      Object.values(row).some((value) =>\n        String(value).toLowerCase().includes(filter)\n      )\n    );\n  }, [data, filter]);\n\n  const fullyFilteredData = React.useMemo(() => {\n      if (!chartFilter) return textFilteredData;\n      return textFilteredData.filter(row => {\n          return Object.entries(chartFilter).every(([key, value]) => {\n              const rowValue = String(row[key as keyof SheetRow]).toLowerCase();\n              const filterValue = String(value).toLowerCase();\n              return rowValue === filterValue;\n          });\n      });\n  }, [textFilteredData, chartFilter]);\n\n\n  const sortedData = React.useMemo(() => {\n    if (!sortKey) return fullyFilteredData;\n\n    return [...fullyFilteredData].sort((a, b) => {\n      const valA = a[sortKey];\n      const valB = b[sortKey];\n\n      if (valA < valB) return sortDirection === 'asc' ? -1 : 1;\n      if (valA > valB) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }, [fullyFilteredData, sortKey, sortDirection]);\n\n  // Pagination logic\n  const totalPages = Math.ceil(sortedData.length / rowsPerPage);\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const currentTableData = sortedData.slice(indexOfFirstRow, indexOfLastRow);\n\n  // Reset to page 1 if rowsPerPage changes\n  React.useEffect(() => {\n    setCurrentPage(1);\n  }, [rowsPerPage]);\n\n  // Adjust current page if it becomes out of bounds due to data changes\n   React.useEffect(() => {\n    const newTotalPages = Math.ceil(sortedData.length / rowsPerPage);\n    if (currentPage > newTotalPages && newTotalPages > 0) {\n      setCurrentPage(newTotalPages);\n    } else if (newTotalPages === 0 && sortedData.length === 0 && currentPage !== 1) {\n      setCurrentPage(1);\n    }\n  }, [sortedData.length, rowsPerPage, currentPage]);\n\n\n  const columns: { key: keyof SheetRow; label: string }[] = [\n    { key: 'Donor/Opp', label: 'Donor/Opportunity' },\n    { key: 'Action/Next Step', label: 'Action/Next Step' },\n    { key: 'Lead', label: 'Lead' },\n    { key: 'Priority', label: 'Priority' },\n    { key: 'Probability', label: 'Probability' },\n  ];\n\n  const getStatusColorClass = (value: string): string => {\n    switch (value?.toLowerCase()) {\n      case 'high':\n        return 'text-[hsl(var(--chart-color-high))] font-semibold';\n      case 'medium':\n        return 'text-[hsl(var(--chart-color-medium))] font-semibold';\n      case 'low':\n        return 'text-[hsl(var(--chart-color-low))] font-semibold';\n      default:\n        return '';\n    }\n  };\n  \n  const displayTotalPages = totalPages > 0 ? totalPages : 1;\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n        <div className=\"flex items-center gap-2\">\n            <Button onClick={toggleCharts} variant=\"outline\">\n            {showCharts ? <EyeOff className=\"mr-2 h-4 w-4\" /> : <Eye className=\"mr-2 h-4 w-4\" />}\n            {showCharts ? 'Hide Charts' : 'Show Charts'}\n            </Button>\n            {chartFilter && (\n            <Button onClick={resetChartFilters} variant=\"outline\" size=\"sm\">\n                <FilterX className=\"mr-2 h-4 w-4\" />\n                Reset Chart Filter\n            </Button>\n            )}\n        </div>\n        <Input\n          type=\"text\"\n          placeholder=\"Filter data...\"\n          value={filter}\n          onChange={handleFilterChange}\n          className=\"max-w-xs w-full sm:w-auto\"\n        />\n      </div>\n\n      {showCharts && (\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <BarChart2 className=\"mr-2 h-5 w-5 text-primary\" />\n              Opportunities Overview\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"p-4 border rounded-lg shadow-sm bg-card\">\n                <h3 className=\"text-lg font-semibold mb-2 text-center\">Opportunities by Lead</h3>\n                <OpportunitiesByLeadChart data={initialData} onFilter={handleChartFilter} currentFilter={chartFilter} />\n              </div>\n              <div className=\"p-4 border rounded-lg shadow-sm bg-card\">\n                <h3 className=\"text-lg font-semibold mb-2 text-center\">Opportunities by Priority</h3>\n                <OpportunitiesByPriorityChart data={initialData} onFilter={handleChartFilter} currentFilter={chartFilter} />\n              </div>\n              <div className=\"p-4 border rounded-lg shadow-sm bg-card\">\n                <h3 className=\"text-lg font-semibold mb-2 text-center\">Opportunities by Probability</h3>\n                <OpportunitiesByProbabilityChart data={initialData} onFilter={handleChartFilter} currentFilter={chartFilter} />\n              </div>\n              <div className=\"p-4 border rounded-lg shadow-sm bg-card\">\n                <h3 className=\"text-lg font-semibold mb-2 text-center\">Priority vs. Probability Matrix</h3>\n                <PriorityProbabilityMatrix data={initialData} onFilter={handleChartFilter} currentFilter={chartFilter} />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      <div className=\"rounded-md border shadow-sm\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              {columns.map((col) => (\n                 <TableHead key={col.key}>\n                    <Button\n                        variant=\"ghost\"\n                        onClick={() => handleSort(col.key)}\n                        className=\"px-2 py-1 h-auto text-left -ml-2\"\n                    >\n                        {col.label}\n                        <ArrowUpDown className={`ml-2 h-3 w-3 ${sortKey === col.key ? 'opacity-100' : 'opacity-30'}`} />\n                    </Button>\n                </TableHead>\n              ))}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {currentTableData.length > 0 ? (\n              currentTableData.map((row, index) => (\n                <TableRow key={index} data-testid={`table-row-${index}`}>\n                  {columns.map((col) => (\n                     <TableCell \n                        key={col.key} \n                        className={cn(\n                          col.key === 'Action/Next Step' ? 'min-w-[200px]' : '',\n                          (col.key === 'Priority' || col.key === 'Probability') && getStatusColorClass(String(row[col.key]))\n                        )}\n                      >\n                      {String(row[col.key])}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                  {initialData.length === 0 ? \"No data available in the sheet.\" : \"No results found for your filter(s).\"}\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n           <TableFooter>\n             <TableRow>\n               <TableCell colSpan={columns.length}>\n                <div className=\"flex items-center justify-between w-full py-2\">\n                    <div className=\"text-sm text-muted-foreground\">\n                        Displaying {currentTableData.length} of {sortedData.length} rows\n                    </div>\n                    {sortedData.length > 0 && (\n                        <div className=\"flex items-center space-x-2 sm:space-x-4 md:space-x-6\">\n                            <div className=\"flex items-center space-x-1 sm:space-x-2\">\n                                <p className=\"text-xs sm:text-sm font-medium\">Rows per page</p>\n                                <Select\n                                    value={`${rowsPerPage}`}\n                                    onValueChange={(value) => {\n                                    setRowsPerPage(Number(value));\n                                    }}\n                                >\n                                    <SelectTrigger className=\"h-7 sm:h-8 w-[60px] sm:w-[70px] text-xs sm:text-sm\">\n                                        <SelectValue placeholder={`${rowsPerPage}`} />\n                                    </SelectTrigger>\n                                    <SelectContent side=\"top\">\n                                    {[50, 100, 150].map((pageSize) => (\n                                        <SelectItem key={pageSize} value={`${pageSize}`} className=\"text-xs sm:text-sm\">\n                                        {pageSize}\n                                        </SelectItem>\n                                    ))}\n                                    </SelectContent>\n                                </Select>\n                            </div>\n                            <div className=\"flex w-[80px] sm:w-[100px] items-center justify-center text-xs sm:text-sm font-medium\">\n                                Page {currentPage} of {displayTotalPages}\n                            </div>\n                            <div className=\"flex items-center space-x-1 sm:space-x-2\">\n                                <Button\n                                    variant=\"outline\"\n                                    className=\"h-7 w-7 sm:h-8 sm:w-8 p-0\"\n                                    onClick={() => setCurrentPage((prev) => Math.max(1, prev - 1))}\n                                    disabled={currentPage === 1}\n                                >\n                                    <span className=\"sr-only\">Go to previous page</span>\n                                    <ChevronLeft className=\"h-3.5 w-3.5 sm:h-4 sm:w-4\" />\n                                </Button>\n                                <Button\n                                    variant=\"outline\"\n                                    className=\"h-7 w-7 sm:h-8 sm:w-8 p-0\"\n                                    onClick={() => setCurrentPage((prev) => Math.min(totalPages, prev + 1))}\n                                    disabled={currentPage === totalPages || totalPages === 0}\n                                >\n                                    <span className=\"sr-only\">Go to next page</span>\n                                    <ChevronRight className=\"h-3.5 w-3.5 sm:h-4 sm:w-4\" />\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n               </TableCell>\n             </TableRow>\n           </TableFooter>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}