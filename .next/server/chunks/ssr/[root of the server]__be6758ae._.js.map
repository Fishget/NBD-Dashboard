{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/sheets.ts"],"sourcesContent":["\nimport { google } from 'googleapis';\nimport type { sheets_v4 } from 'googleapis';\n\n// Define the structure of a row in your sheet\nexport interface SheetRow {\n  'Donor/Opp': string;\n  'Action/Next Step': string;\n  Lead: string;\n  Priority: 'High' | 'Medium' | 'Low';\n  Probability: 'High' | 'Medium' | 'Low';\n}\n\n// Environment variables\nconst SHEET_ID = process.env.GOOGLE_SHEET_ID;\nconst SERVICE_ACCOUNT_EMAIL = process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL;\nconst SHEET_RANGE = process.env.GOOGLE_SHEET_RANGE || 'Sheet1!A:E'; // Default range if not specified\n\nlet PRIVATE_KEY: string | undefined;\nconst rawPrivateKeyFromEnv = process.env.GOOGLE_PRIVATE_KEY;\n\nif (rawPrivateKeyFromEnv && rawPrivateKeyFromEnv.trim() !== '') {\n    let processedEnvVar = rawPrivateKeyFromEnv.trim();\n    // Strip surrounding quotes if present (common for multi-line env vars)\n    if ((processedEnvVar.startsWith('\"') && processedEnvVar.endsWith('\"')) ||\n        (processedEnvVar.startsWith(\"'\") && processedEnvVar.endsWith(\"'\"))) {\n        processedEnvVar = processedEnvVar.substring(1, processedEnvVar.length - 1);\n    }\n\n    // Now, process for escaped newlines and then trim again\n    let key = processedEnvVar.replace(/\\\\n/g, '\\n').trim();\n\n    // Validate basic PEM structure.\n    if (key.startsWith('-----BEGIN PRIVATE KEY-----') && key.endsWith('-----END PRIVATE KEY-----')) {\n        // Further check: ensure there's content between header and footer\n        const coreKeyContent = key.substring('-----BEGIN PRIVATE KEY-----'.length, key.length - '-----END PRIVATE KEY-----'.length).trim();\n        if (coreKeyContent.length > 0) {\n            PRIVATE_KEY = key;\n        } else {\n            console.warn(\n                'GOOGLE_PRIVATE_KEY appears to have valid PEM markers but no actual key content in between after processing. Sheet operations will fail.' +\n                `\\n  Original GOOGLE_PRIVATE_KEY (trimmed, first 30 chars): \"${(rawPrivateKeyFromEnv || \"\").trim().substring(0, Math.min(30, (rawPrivateKeyFromEnv || \"\").trim().length))}\"`\n            );\n            PRIVATE_KEY = undefined;\n        }\n    } else {\n        console.warn(\n            'GOOGLE_PRIVATE_KEY environment variable appears malformed after processing. It will not be used. Sheet operations may fail.' +\n            `\\n  Problem: Did not pass PEM marker (-----BEGIN/END PRIVATE KEY-----) checks.` +\n            `\\n  Processed key (after potential quote stripping & newline conversion) starts with: \"${key.substring(0, Math.min(30, key.length))}\"` +\n            `\\n  Processed key ends with: \"${key.substring(Math.max(0, key.length - 30))}\"` +\n            `\\n  Length of this processed key string: ${key.length}` +\n            `\\n  Original GOOGLE_PRIVATE_KEY (trimmed, first 30 chars): \"${(rawPrivateKeyFromEnv || \"\").trim().substring(0, Math.min(30, (rawPrivateKeyFromEnv || \"\").trim().length))}\"` +\n            `\\n  Hint: Check for missing PEM markers, extra characters, or incorrect newline escaping in your .env.local file for GOOGLE_PRIVATE_KEY.`\n        );\n        PRIVATE_KEY = undefined;\n    }\n} else {\n    console.warn('GOOGLE_PRIVATE_KEY is not set, empty, or only whitespace in environment variables. PRIVATE_KEY will be undefined.');\n    PRIVATE_KEY = undefined;\n}\n\n// Initial check for logging purposes; actual guard is in getSheetsClient\n(() => {\n  const missingVarsWarn = [];\n  if (!SHEET_ID) missingVarsWarn.push('GOOGLE_SHEET_ID');\n  if (!SERVICE_ACCOUNT_EMAIL) missingVarsWarn.push('GOOGLE_SERVICE_ACCOUNT_EMAIL');\n  \n  if (!PRIVATE_KEY) { \n    if (!rawPrivateKeyFromEnv) {\n      missingVarsWarn.push('GOOGLE_PRIVATE_KEY (not set)');\n    } else if (rawPrivateKeyFromEnv.trim() === '') {\n      missingVarsWarn.push('GOOGLE_PRIVATE_KEY (set but empty/whitespace)');\n    }\n    else {\n      // This case means rawPrivateKeyFromEnv was set, but PRIVATE_KEY is still undefined,\n      // implying formatting or PEM marker checks failed. The detailed warning above already covered this.\n      missingVarsWarn.push('GOOGLE_PRIVATE_KEY (set but failed formatting/PEM checks - see detailed warning above)');\n    }\n  }\n  if (missingVarsWarn.length > 0) {\n    console.warn(\n      `SheetSync Initialization Warning: One or more Google Sheets API credentials are problematic. Sheet operations are likely to fail. Problematic variables: [${missingVarsWarn.join(', ')}]`\n    );\n  }\n})();\n\n\nexport function getSheetsClient(): sheets_v4.Sheets | null {\n  if (!SHEET_ID || !SERVICE_ACCOUNT_EMAIL || !PRIVATE_KEY) {\n    console.error('Cannot initialize Sheets client: Essential Google Sheets API credentials (SHEET_ID, SERVICE_ACCOUNT_EMAIL, PRIVATE_KEY) are not fully set or the private key is malformed/missing.');\n    const missing = [];\n    if (!SHEET_ID) missing.push('GOOGLE_SHEET_ID');\n    if (!SERVICE_ACCOUNT_EMAIL) missing.push('GOOGLE_SERVICE_ACCOUNT_EMAIL');\n    if (!PRIVATE_KEY) { \n        if (!rawPrivateKeyFromEnv) {\n            missing.push('GOOGLE_PRIVATE_KEY (is not set)');\n        } else if (rawPrivateKeyFromEnv.trim() === '') {\n            missing.push('GOOGLE_PRIVATE_KEY (is set but empty/whitespace)');\n        } else {\n            missing.push('GOOGLE_PRIVATE_KEY (is set but was malformed or failed structural/PEM checks - see warnings above)');\n        }\n    }\n    if (missing.length > 0) console.error(`Detailed missing/problematic environment variables: ${missing.join(', ')}`);\n    return null;\n  }\n\n  try {\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: SERVICE_ACCOUNT_EMAIL,\n        private_key: PRIVATE_KEY,\n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n    });\n\n    return google.sheets({ version: 'v4', auth });\n  } catch (error) {\n    console.error('Error initializing Google Auth client:', error);\n    if (error instanceof Error && (error.message.includes('DECODER routines') || error.message.includes('PEM routines') || error.message.includes('private key') || error.message.includes('asn1 encoding'))) {\n        console.error(\n          'This error during auth initialization often indicates an issue with the GOOGLE_PRIVATE_KEY format or value even after initial checks. Ensure it is a valid PEM-formatted private key. The key might have passed basic structural checks but is still not parsable by the crypto library.'\n        );\n    }\n    return null;\n  }\n}\n\nexport async function getSheetData(): Promise<SheetRow[]> {\n  const sheets = getSheetsClient();\n  if (!sheets) {\n     console.warn('Google Sheets client is not available (possibly due to configuration issues). Returning empty data for dashboard.');\n     return [];\n  }\n  if (!SHEET_ID){ \n    console.warn('GOOGLE_SHEET_ID is not configured. Returning empty data for dashboard.');\n    return [];\n  }\n\n  try {\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE,\n    });\n\n    const rows = response.data.values;\n    if (!rows || rows.length === 0) {\n      console.log('No data found in the specified sheet range or sheet is empty.');\n      return [];\n    }\n\n    const headers = rows[0].map(header => String(header).trim());\n    const dataRows = rows.slice(1);\n\n    const expectedHeaders = ['Donor/Opp', 'Action/Next Step', 'Lead', 'Priority', 'Probability'];\n    const missingHeaders = expectedHeaders.filter(eh => !headers.includes(eh));\n    if (missingHeaders.length > 0) {\n       console.warn(`Sheet is missing expected headers: [${missingHeaders.join(', ')}]. Current headers: [${headers.join(', ')}]. Data mapping might be incorrect or incomplete.`);\n    }\n\n    return dataRows.map((row) => {\n      const rowData: Partial<SheetRow> = {};\n      headers.forEach((header, index) => {\n        const cellValue = row[index] !== undefined && row[index] !== null ? String(row[index]) : ''; \n\n        if (expectedHeaders.includes(header)) { \n            if ((header === 'Priority' || header === 'Probability')) {\n               const value = cellValue.trim();\n               if (['High', 'Medium', 'Low'].includes(value)) {\n                  rowData[header as keyof SheetRow] = value as 'High' | 'Medium' | 'Low';\n               } else {\n                  if (value !== '') {\n                    // console.warn(`Invalid value \"${value}\" for ${header} in row. Defaulting to Medium.`);\n                  }\n                  rowData[header as keyof SheetRow] = 'Medium'; // Default if invalid or empty\n               }\n            } else {\n               rowData[header as keyof SheetRow] = cellValue;\n            }\n        }\n      });\n      // Ensure all expected keys exist, even if not in sheet headers or row is shorter\n      expectedHeaders.forEach(eh => {\n        const key = eh as keyof SheetRow;\n        if (!(key in rowData)) {\n          if (key === 'Priority' || key === 'Probability') {\n            rowData[key] = 'Medium'; \n          } else {\n            rowData[key] = ''; \n          }\n        }\n      });\n      return rowData as SheetRow;\n    }).filter(row => Object.values(row).some(val => typeof val === 'string' && val.trim() !== '')); // Filter out completely empty effective rows\n\n\n  } catch (error) {\n    console.error('Error fetching sheet data from Google Sheets API:', error);\n    if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has at least read access to the Google Sheet (${SHEET_ID}).`);\n    } else if (error instanceof Error && error.message.includes('Requested entity was not found')) {\n        console.error(`Sheet or range not found. Verify GOOGLE_SHEET_ID (${SHEET_ID}) and GOOGLE_SHEET_RANGE (${SHEET_RANGE}).`);\n    } else if (error instanceof Error && (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant'))) {\n        console.error('Authentication failed. This could be due to an invalid service account email, private key, or incorrect project setup.');\n    } else if (error instanceof Error && (error.message.includes('DECODER routines') || error.message.includes('PEM routines'))) {\n        console.error('A cryptographic error occurred, often related to a malformed private key. Ensure GOOGLE_PRIVATE_KEY is correctly formatted in your environment.');\n    }\n    return []; \n  }\n}\n\nexport async function appendSheetRow(rowData: Omit<SheetRow, ''>): Promise<boolean> {\n  const sheets = getSheetsClient();\n   if (!sheets) {\n      console.error(\"Cannot append row: Google Sheets client not available (possibly due to configuration issues).\");\n      return false;\n   }\n   if (!SHEET_ID) { \n     console.error(\"Cannot append row: GOOGLE_SHEET_ID is not configured.\");\n     return false;\n   }\n\n  const values = [\n    rowData['Donor/Opp'],\n    rowData['Action/Next Step'],\n    rowData.Lead,\n    rowData.Priority,\n    rowData.Probability\n  ];\n\n  try {\n    await sheets.spreadsheets.values.append({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE, \n      valueInputOption: 'USER_ENTERED', \n      insertDataOption: 'INSERT_ROWS', \n      requestBody: {\n        values: [values],\n      },\n    });\n    console.log('Row appended successfully to Google Sheet.');\n    return true;\n  } catch (error) {\n    console.error('Error appending sheet row to Google Sheets API:', error);\n     if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has write access to the Google Sheet (${SHEET_ID}).`);\n    } else if (error instanceof Error && (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant'))) {\n        console.error('Authentication failed while appending. Check service account credentials and permissions.');\n    }\n    return false;\n  }\n}\n\n"],"names":[],"mappings":";;;;;AACA;;AAYA,wBAAwB;AACxB,MAAM,WAAW,QAAQ,GAAG,CAAC,eAAe;AAC5C,MAAM,wBAAwB,QAAQ,GAAG,CAAC,4BAA4B;AACtE,MAAM,cAAc,QAAQ,GAAG,CAAC,kBAAkB,IAAI,cAAc,iCAAiC;AAErG,IAAI;AACJ,MAAM,uBAAuB,QAAQ,GAAG,CAAC,kBAAkB;AAE3D,IAAI,wBAAwB,qBAAqB,IAAI,OAAO,IAAI;IAC5D,IAAI,kBAAkB,qBAAqB,IAAI;IAC/C,uEAAuE;IACvE,IAAI,AAAC,gBAAgB,UAAU,CAAC,QAAQ,gBAAgB,QAAQ,CAAC,QAC5D,gBAAgB,UAAU,CAAC,QAAQ,gBAAgB,QAAQ,CAAC,MAAO;QACpE,kBAAkB,gBAAgB,SAAS,CAAC,GAAG,gBAAgB,MAAM,GAAG;IAC5E;IAEA,wDAAwD;IACxD,IAAI,MAAM,gBAAgB,OAAO,CAAC,QAAQ,MAAM,IAAI;IAEpD,gCAAgC;IAChC,IAAI,IAAI,UAAU,CAAC,kCAAkC,IAAI,QAAQ,CAAC,8BAA8B;QAC5F,kEAAkE;QAClE,MAAM,iBAAiB,IAAI,SAAS,CAAC,8BAA8B,MAAM,EAAE,IAAI,MAAM,GAAG,4BAA4B,MAAM,EAAE,IAAI;QAChI,IAAI,eAAe,MAAM,GAAG,GAAG;YAC3B,cAAc;QAClB,OAAO;YACH,QAAQ,IAAI,CACR,4IACA,CAAC,4DAA4D,EAAE,CAAC,wBAAwB,EAAE,EAAE,IAAI,GAAG,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC;YAEhL,cAAc;QAClB;IACJ,OAAO;QACH,QAAQ,IAAI,CACR,gIACA,CAAC,8EAA8E,CAAC,GAChF,CAAC,uFAAuF,EAAE,IAAI,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,GACvI,CAAC,8BAA8B,EAAE,IAAI,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,GAC/E,CAAC,yCAAyC,EAAE,IAAI,MAAM,EAAE,GACxD,CAAC,4DAA4D,EAAE,CAAC,wBAAwB,EAAE,EAAE,IAAI,GAAG,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,IAAI,GAAG,MAAM,GAAG,CAAC,CAAC,GAC5K,CAAC,wIAAwI,CAAC;QAE9I,cAAc;IAClB;AACJ,OAAO;IACH,QAAQ,IAAI,CAAC;IACb,cAAc;AAClB;AAEA,yEAAyE;AACzE,CAAC;IACC,MAAM,kBAAkB,EAAE;IAC1B,IAAI,CAAC,UAAU,gBAAgB,IAAI,CAAC;IACpC,IAAI,CAAC,uBAAuB,gBAAgB,IAAI,CAAC;IAEjD,IAAI,CAAC,aAAa;QAChB,IAAI,CAAC,sBAAsB;YACzB,gBAAgB,IAAI,CAAC;QACvB,OAAO,IAAI,qBAAqB,IAAI,OAAO,IAAI;YAC7C,gBAAgB,IAAI,CAAC;QACvB,OACK;YACH,oFAAoF;YACpF,oGAAoG;YACpG,gBAAgB,IAAI,CAAC;QACvB;IACF;IACA,IAAI,gBAAgB,MAAM,GAAG,GAAG;QAC9B,QAAQ,IAAI,CACV,CAAC,0JAA0J,EAAE,gBAAgB,IAAI,CAAC,MAAM,CAAC,CAAC;IAE9L;AACF,CAAC;AAGM,SAAS;IACd,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,aAAa;QACvD,QAAQ,KAAK,CAAC;QACd,MAAM,UAAU,EAAE;QAClB,IAAI,CAAC,UAAU,QAAQ,IAAI,CAAC;QAC5B,IAAI,CAAC,uBAAuB,QAAQ,IAAI,CAAC;QACzC,IAAI,CAAC,aAAa;YACd,IAAI,CAAC,sBAAsB;gBACvB,QAAQ,IAAI,CAAC;YACjB,OAAO,IAAI,qBAAqB,IAAI,OAAO,IAAI;gBAC3C,QAAQ,IAAI,CAAC;YACjB,OAAO;gBACH,QAAQ,IAAI,CAAC;YACjB;QACJ;QACA,IAAI,QAAQ,MAAM,GAAG,GAAG,QAAQ,KAAK,CAAC,CAAC,oDAAoD,EAAE,QAAQ,IAAI,CAAC,OAAO;QACjH,OAAO;IACT;IAEA,IAAI;QACF,MAAM,OAAO,IAAI,mJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,cAAc;gBACd,aAAa;YACf;YACA,QAAQ;gBAAC;aAA+C;QAC1D;QAEA,OAAO,mJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;IAC7C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;QACxD,IAAI,iBAAiB,SAAS,CAAC,MAAM,OAAO,CAAC,QAAQ,CAAC,uBAAuB,MAAM,OAAO,CAAC,QAAQ,CAAC,mBAAmB,MAAM,OAAO,CAAC,QAAQ,CAAC,kBAAkB,MAAM,OAAO,CAAC,QAAQ,CAAC,gBAAgB,GAAG;YACtM,QAAQ,KAAK,CACX;QAEN;QACA,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,SAAS;IACf,IAAI,CAAC,QAAQ;QACV,QAAQ,IAAI,CAAC;QACb,OAAO,EAAE;IACZ;IACA,IAAI,CAAC,UAAS;QACZ,QAAQ,IAAI,CAAC;QACb,OAAO,EAAE;IACX;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM;QACjC,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;YAC9B,QAAQ,GAAG,CAAC;YACZ,OAAO,EAAE;QACX;QAEA,MAAM,UAAU,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA,SAAU,OAAO,QAAQ,IAAI;QACzD,MAAM,WAAW,KAAK,KAAK,CAAC;QAE5B,MAAM,kBAAkB;YAAC;YAAa;YAAoB;YAAQ;YAAY;SAAc;QAC5F,MAAM,iBAAiB,gBAAgB,MAAM,CAAC,CAAA,KAAM,CAAC,QAAQ,QAAQ,CAAC;QACtE,IAAI,eAAe,MAAM,GAAG,GAAG;YAC5B,QAAQ,IAAI,CAAC,CAAC,oCAAoC,EAAE,eAAe,IAAI,CAAC,MAAM,qBAAqB,EAAE,QAAQ,IAAI,CAAC,MAAM,iDAAiD,CAAC;QAC7K;QAEA,OAAO,SAAS,GAAG,CAAC,CAAC;YACnB,MAAM,UAA6B,CAAC;YACpC,QAAQ,OAAO,CAAC,CAAC,QAAQ;gBACvB,MAAM,YAAY,GAAG,CAAC,MAAM,KAAK,aAAa,GAAG,CAAC,MAAM,KAAK,OAAO,OAAO,GAAG,CAAC,MAAM,IAAI;gBAEzF,IAAI,gBAAgB,QAAQ,CAAC,SAAS;oBAClC,IAAK,WAAW,cAAc,WAAW,eAAgB;wBACtD,MAAM,QAAQ,UAAU,IAAI;wBAC5B,IAAI;4BAAC;4BAAQ;4BAAU;yBAAM,CAAC,QAAQ,CAAC,QAAQ;4BAC5C,OAAO,CAAC,OAAyB,GAAG;wBACvC,OAAO;4BACJ,IAAI,UAAU,IAAI;4BAChB,wFAAwF;4BAC1F;4BACA,OAAO,CAAC,OAAyB,GAAG,UAAU,8BAA8B;wBAC/E;oBACH,OAAO;wBACJ,OAAO,CAAC,OAAyB,GAAG;oBACvC;gBACJ;YACF;YACA,iFAAiF;YACjF,gBAAgB,OAAO,CAAC,CAAA;gBACtB,MAAM,MAAM;gBACZ,IAAI,CAAC,CAAC,OAAO,OAAO,GAAG;oBACrB,IAAI,QAAQ,cAAc,QAAQ,eAAe;wBAC/C,OAAO,CAAC,IAAI,GAAG;oBACjB,OAAO;wBACL,OAAO,CAAC,IAAI,GAAG;oBACjB;gBACF;YACF;YACA,OAAO;QACT,GAAG,MAAM,CAAC,CAAA,MAAO,OAAO,MAAM,CAAC,KAAK,IAAI,CAAC,CAAA,MAAO,OAAO,QAAQ,YAAY,IAAI,IAAI,OAAO,MAAM,6CAA6C;IAG/I,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qDAAqD;QACnE,IAAI,iBAAiB,SAAS,MAAM,OAAO,CAAC,QAAQ,CAAC,sBAAsB;YACvE,QAAQ,KAAK,CAAC,CAAC,+CAA+C,EAAE,sBAAsB,gDAAgD,EAAE,SAAS,EAAE,CAAC;QACxJ,OAAO,IAAI,iBAAiB,SAAS,MAAM,OAAO,CAAC,QAAQ,CAAC,mCAAmC;YAC3F,QAAQ,KAAK,CAAC,CAAC,kDAAkD,EAAE,SAAS,0BAA0B,EAAE,YAAY,EAAE,CAAC;QAC3H,OAAO,IAAI,iBAAiB,SAAS,CAAC,MAAM,OAAO,CAAC,QAAQ,CAAC,sBAAsB,MAAM,OAAO,CAAC,QAAQ,CAAC,gBAAgB,GAAG;YACzH,QAAQ,KAAK,CAAC;QAClB,OAAO,IAAI,iBAAiB,SAAS,CAAC,MAAM,OAAO,CAAC,QAAQ,CAAC,uBAAuB,MAAM,OAAO,CAAC,QAAQ,CAAC,eAAe,GAAG;YACzH,QAAQ,KAAK,CAAC;QAClB;QACA,OAAO,EAAE;IACX;AACF;AAEO,eAAe,eAAe,OAA2B;IAC9D,MAAM,SAAS;IACd,IAAI,CAAC,QAAQ;QACV,QAAQ,KAAK,CAAC;QACd,OAAO;IACV;IACA,IAAI,CAAC,UAAU;QACb,QAAQ,KAAK,CAAC;QACd,OAAO;IACT;IAED,MAAM,SAAS;QACb,OAAO,CAAC,YAAY;QACpB,OAAO,CAAC,mBAAmB;QAC3B,QAAQ,IAAI;QACZ,QAAQ,QAAQ;QAChB,QAAQ,WAAW;KACpB;IAED,IAAI;QACF,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC,eAAe;YACf,OAAO;YACP,kBAAkB;YAClB,kBAAkB;YAClB,aAAa;gBACX,QAAQ;oBAAC;iBAAO;YAClB;QACF;QACA,QAAQ,GAAG,CAAC;QACZ,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mDAAmD;QAChE,IAAI,iBAAiB,SAAS,MAAM,OAAO,CAAC,QAAQ,CAAC,sBAAsB;YACxE,QAAQ,KAAK,CAAC,CAAC,+CAA+C,EAAE,sBAAsB,wCAAwC,EAAE,SAAS,EAAE,CAAC;QAChJ,OAAO,IAAI,iBAAiB,SAAS,CAAC,MAAM,OAAO,CAAC,QAAQ,CAAC,sBAAsB,MAAM,OAAO,CAAC,QAAQ,CAAC,gBAAgB,GAAG;YACzH,QAAQ,KAAK,CAAC;QAClB;QACA,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardTable() from the server but DashboardTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard-table.tsx <module evaluation>\",\n    \"DashboardTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oEACA","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard-table.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardTable() from the server but DashboardTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard-table.tsx\",\n    \"DashboardTable\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,gDACA","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { getSheetData } from '@/lib/sheets';\nimport { DashboardTable } from '@/components/dashboard-table';\nimport { Skeleton } from '@/components/ui/skeleton';\n\n// Helper component for loading skeleton\nfunction TableSkeleton() {\n  return (\n    <div className=\"space-y-4\">\n       <div className=\"flex justify-end\">\n            <Skeleton className=\"h-10 w-[250px]\" />\n       </div>\n      <div className=\"rounded-md border\">\n        <div className=\"overflow-auto\">\n          <table className=\"w-full caption-bottom text-sm\">\n            <thead className=\"[&_tr]:border-b\">\n              <tr className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[150px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[200px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[100px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[80px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[100px]\" /></th>\n              </tr>\n            </thead>\n            <tbody className=\"[&_tr:last-child]:border-0\">\n              {[...Array(5)].map((_, i) => (\n                <tr key={i} className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Data fetching component wrapped for Suspense\nasync function DashboardData() {\n  // Add a small delay to simulate network latency if needed for testing skeleton\n  // await new Promise(resolve => setTimeout(resolve, 1000));\n  const data = await getSheetData();\n  return <DashboardTable initialData={data} />;\n}\n\nexport default function Home() {\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold text-primary\">Donor Dashboard</h1>\n      <p className=\"text-muted-foreground\">\n        Live data from Google Sheet. Use the filter input to search across all columns. Click column headers to sort.\n      </p>\n      <Suspense fallback={<TableSkeleton />}>\n        <DashboardData />\n      </Suspense>\n    </div>\n  );\n}\n\n// Ensure dynamic rendering as data comes from an external source\nexport const dynamic = 'force-dynamic';\nexport const revalidate = 60; // Optional: Revalidate cache every 60 seconds\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,wCAAwC;AACxC,SAAS;IACP,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC;gBAAI,WAAU;0BACV,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;0BAE1B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAM,WAAU;;0CACf,8OAAC;gCAAM,WAAU;0CACf,cAAA,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDACvG,8OAAC;4CAAG,WAAU;sDAAqE,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;0CAG3G,8OAAC;gCAAM,WAAU;0CACd;uCAAI,MAAM;iCAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC;wCAAW,WAAU;;0DACpB,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DACrD,8OAAC;gDAAG,WAAU;0DAAmB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;;uCAL9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAczB;AAEA,+CAA+C;AAC/C,eAAe;IACb,+EAA+E;IAC/E,2DAA2D;IAC3D,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,eAAY,AAAD;IAC9B,qBAAO,8OAAC,wIAAA,CAAA,iBAAc;QAAC,aAAa;;;;;;AACtC;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAkC;;;;;;0BAChD,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;0BAGrC,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC;;;;;0BACnB,cAAA,8OAAC;;;;;;;;;;;;;;;;AAIT;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa,IAAI,8CAA8C","debugId":null}}]
}