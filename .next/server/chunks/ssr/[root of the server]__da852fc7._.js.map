{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/auth.ts"],"sourcesContent":["import { cookies } from 'next/headers';\nimport type { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';\n\nconst AUTH_COOKIE_NAME = 'sheetsync_auth';\nconst ADMIN_USERNAME = process.env.ADMIN_USERNAME;\nconst ADMIN_PASSWORD = process.env.ADMIN_PASSWORD;\n\nif (!ADMIN_USERNAME || !ADMIN_PASSWORD) {\n  console.warn('Admin credentials are not set in environment variables. Admin login will not work.');\n}\n\nexport function checkCredentials(username?: string | null, password?: string | null): boolean {\n  if (!ADMIN_USERNAME || !ADMIN_PASSWORD) {\n    return false; // Cannot authenticate if credentials aren't set\n  }\n  return username === ADMIN_USERNAME && password === ADMIN_PASSWORD;\n}\n\nexport async function setAuthCookie(): Promise<void> {\n  const cookieStore = cookies();\n  cookieStore.set(AUTH_COOKIE_NAME, 'true', {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    path: '/admin', // Restrict cookie to admin paths\n    sameSite: 'lax',\n    maxAge: 60 * 60 * 24, // 24 hours validity\n  });\n}\n\nexport async function clearAuthCookie(): Promise<void> {\n  const cookieStore = cookies();\n  cookieStore.delete(AUTH_COOKIE_NAME);\n}\n\nexport function isAuthenticated(cookieStore?: ReadonlyRequestCookies): boolean {\n  const store = cookieStore || cookies();\n  const authCookie = store.get(AUTH_COOKIE_NAME);\n  return authCookie?.value === 'true';\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAGA,MAAM,mBAAmB;AACzB,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc;AACjD,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc;AAEjD,IAAI,CAAC,kBAAkB,CAAC,gBAAgB;IACtC,QAAQ,IAAI,CAAC;AACf;AAEO,SAAS,iBAAiB,QAAwB,EAAE,QAAwB;IACjF,IAAI,CAAC,kBAAkB,CAAC,gBAAgB;QACtC,OAAO,OAAO,gDAAgD;IAChE;IACA,OAAO,aAAa,kBAAkB,aAAa;AACrD;AAEO,eAAe;IACpB,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,YAAY,GAAG,CAAC,kBAAkB,QAAQ;QACxC,UAAU;QACV,QAAQ,oDAAyB;QACjC,MAAM;QACN,UAAU;QACV,QAAQ,KAAK,KAAK;IACpB;AACF;AAEO,eAAe;IACpB,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,YAAY,MAAM,CAAC;AACrB;AAEO,SAAS,gBAAgB,WAAoC;IAClE,MAAM,QAAQ,eAAe,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACnC,MAAM,aAAa,MAAM,GAAG,CAAC;IAC7B,OAAO,YAAY,UAAU;AAC/B","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/validators.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const loginSchema = z.object({\n  username: z.string().min(1, 'Username is required'),\n  password: z.string().min(1, 'Password is required'),\n});\n\nexport type LoginFormData = z.infer<typeof loginSchema>;\n\nexport const sheetRowSchema = z.object({\n  'Donor/Opp': z.string().min(1, 'Donor/Opportunity is required'),\n  'Action/Next Step': z.string().min(1, 'Action/Next Step is required'),\n  Lead: z.string().min(1, 'Lead is required'),\n  Priority: z.enum(['High', 'Medium', 'Low'], {\n    errorMap: () => ({ message: 'Please select a valid priority' }),\n  }),\n  Probability: z.enum(['High', 'Medium', 'Low'], {\n    errorMap: () => ({ message: 'Please select a valid probability' }),\n  }),\n});\n\nexport type SheetRowFormData = z.infer<typeof sheetRowSchema>;\n\n// Schema for Google Sheet Configuration Form\nexport const sheetConfigSchema = z.object({\n    sheetId: z.string().min(10, 'Sheet ID seems too short. Please check the copied ID.').trim(),\n    sheetRange: z.string()\n                .min(3, 'Sheet range is required (e.g., Sheet1!A:E)')\n                .regex(/^[a-zA-Z0-9\\s]+!([A-Z]+):([A-Z]+)$/, 'Invalid range format. Expected format like \"Sheet1!A:E\" with uppercase column letters.'),\n    serviceAccountEmail: z.string().email('Invalid service account email format. Please enter a valid email address.'),\n    privateKey: z.string()\n        .transform(key => {\n            // 1. Replace literal \"\\\\n\" (escaped newlines common in JSON strings) with actual newline characters.\n            let processedKey = key.replace(/\\\\n/g, '\\n');\n            // 2. Normalize Windows-style newlines (\\r\\n) to Unix-style newlines (\\n).\n            processedKey = processedKey.replace(/\\r\\n/g, '\\n');\n            // 3. Trim any leading/trailing whitespace from the entire key block.\n            processedKey = processedKey.trim();\n            return processedKey;\n        })\n        .pipe(\n            z.string()\n            .min(100, 'Private key is too short. Ensure you have copied the full key from the JSON file.')\n            .startsWith('-----BEGIN PRIVATE KEY-----', 'Private key must start with \"-----BEGIN PRIVATE KEY-----\". Check for missing parts or extra characters at the beginning.')\n            .endsWith('-----END PRIVATE KEY-----', 'Private key must end with \"-----END PRIVATE KEY-----\". Check for missing parts or extra characters at the end.')\n            .refine(key => key.includes('\\n'), { message: \"Private key must be a multi-line string. Ensure newlines are preserved when copying.\" })\n            .refine(key => {\n                // Check for common errors like pasting the entire JSON key-value pair or including quotes\n                // These checks are against the already transformed key (e.g. outer quotes should be removed by .trim())\n                if (key.startsWith('\"-----BEGIN PRIVATE KEY-----') || key.startsWith(\"'-----BEGIN PRIVATE KEY-----\")) {\n                    return false;\n                }\n                if (key.includes('\"private_key\":') || key.includes(\"'private_key':\")) {\n                    return false;\n                }\n                // Ensure there's content between the header and footer\n                const coreKey = key.replace('-----BEGIN PRIVATE KEY-----', '').replace('-----END PRIVATE KEY-----', '').trim();\n                return coreKey.length > 0;\n            }, {message: \"It looks like you might have pasted more than just the private key string, or the key content is empty. Please paste only the characters starting with -----BEGIN PRIVATE KEY----- and ending with -----END PRIVATE KEY-----.\"})\n        ),\n});\n\nexport type SheetConfigFormData = z.infer<typeof sheetConfigSchema>;\n\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACtC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,UAAU,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAM,EAAE;QAC1C,UAAU,IAAM,CAAC;gBAAE,SAAS;YAAiC,CAAC;IAChE;IACA,aAAa,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAM,EAAE;QAC7C,UAAU,IAAM,CAAC;gBAAE,SAAS;YAAoC,CAAC;IACnE;AACF;AAKO,MAAM,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,yDAAyD,IAAI;IACzF,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GACP,GAAG,CAAC,GAAG,8CACP,KAAK,CAAC,sCAAsC;IACzD,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACtC,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GACf,SAAS,CAAC,CAAA;QACP,qGAAqG;QACrG,IAAI,eAAe,IAAI,OAAO,CAAC,QAAQ;QACvC,0EAA0E;QAC1E,eAAe,aAAa,OAAO,CAAC,SAAS;QAC7C,qEAAqE;QACrE,eAAe,aAAa,IAAI;QAChC,OAAO;IACX,GACC,IAAI,CACD,oIAAA,CAAA,IAAC,CAAC,MAAM,GACP,GAAG,CAAC,KAAK,qFACT,UAAU,CAAC,+BAA+B,4HAC1C,QAAQ,CAAC,6BAA6B,kHACtC,MAAM,CAAC,CAAA,MAAO,IAAI,QAAQ,CAAC,OAAO;QAAE,SAAS;IAAuF,GACpI,MAAM,CAAC,CAAA;QACJ,0FAA0F;QAC1F,wGAAwG;QACxG,IAAI,IAAI,UAAU,CAAC,mCAAmC,IAAI,UAAU,CAAC,iCAAiC;YAClG,OAAO;QACX;QACA,IAAI,IAAI,QAAQ,CAAC,qBAAqB,IAAI,QAAQ,CAAC,mBAAmB;YAClE,OAAO;QACX;QACA,uDAAuD;QACvD,MAAM,UAAU,IAAI,OAAO,CAAC,+BAA+B,IAAI,OAAO,CAAC,6BAA6B,IAAI,IAAI;QAC5G,OAAO,QAAQ,MAAM,GAAG;IAC5B,GAAG;QAAC,SAAS;IAA+N;AAExP","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/sheets.ts"],"sourcesContent":["\nimport { google } from 'googleapis';\nimport type { sheets_v4 } from 'googleapis';\n\n// Define the structure of a row in your sheet\nexport interface SheetRow {\n  'Donor/Opp': string;\n  'Action/Next Step': string;\n  Lead: string;\n  Priority: 'High' | 'Medium' | 'Low';\n  Probability: 'High' | 'Medium' | 'Low';\n}\n\n// Environment variables check\nconst SHEET_ID = process.env.GOOGLE_SHEET_ID;\nconst SERVICE_ACCOUNT_EMAIL = process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL;\nconst PRIVATE_KEY = process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'); // Handle newline characters\nconst SHEET_RANGE = process.env.GOOGLE_SHEET_RANGE || 'Sheet1!A:E'; // Default range if not specified\n\n// Initial check for logging purposes, actual guard is in getSheetsClient\nif (!SHEET_ID || !SERVICE_ACCOUNT_EMAIL || !PRIVATE_KEY) {\n  console.warn(\n    'One or more Google Sheets API credentials (SHEET_ID, SERVICE_ACCOUNT_EMAIL, PRIVATE_KEY) are missing or incomplete in environment variables. Sheet operations may fail.'\n  );\n}\n\nexport function getSheetsClient(): sheets_v4.Sheets | null {\n  if (!SHEET_ID || !SERVICE_ACCOUNT_EMAIL || !PRIVATE_KEY) {\n    console.error('Cannot initialize Sheets client: Essential Google Sheets API credentials are not fully set in environment variables.');\n    // Optionally, be more specific about which are missing for server logs\n    const missing = [];\n    if (!SHEET_ID) missing.push('GOOGLE_SHEET_ID');\n    if (!SERVICE_ACCOUNT_EMAIL) missing.push('GOOGLE_SERVICE_ACCOUNT_EMAIL');\n    if (!PRIVATE_KEY) missing.push('GOOGLE_PRIVATE_KEY');\n    console.error(`Missing environment variables: ${missing.join(', ')}`);\n    return null;\n  }\n\n  try {\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: SERVICE_ACCOUNT_EMAIL,\n        private_key: PRIVATE_KEY,\n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n    });\n\n    return google.sheets({ version: 'v4', auth });\n  } catch (error) {\n    console.error('Error initializing Google Auth client:', error);\n    if (error instanceof Error && (error.message.includes('DECODER routines') || error.message.includes('PEM routines') || error.message.includes('private key') || error.message.includes('asn1 encoding'))) {\n        console.error(\n          'This error often indicates an issue with the GOOGLE_PRIVATE_KEY format or value in your environment variables. Ensure it is a valid PEM-formatted private key, with newline characters correctly handled (e.g., using \"\\\\n\" in .env files or actual newlines if your provider supports them for multi-line variables).'\n        );\n    }\n    return null;\n  }\n}\n\nexport async function getSheetData(): Promise<SheetRow[]> {\n  const sheets = getSheetsClient();\n  if (!sheets) {\n     console.warn('Google Sheets client is not available (possibly due to configuration issues). Returning empty data for dashboard.');\n     return [];\n  }\n  if (!SHEET_ID){\n    console.warn('GOOGLE_SHEET_ID is not configured. Returning empty data for dashboard.');\n    return [];\n  }\n\n  try {\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE,\n    });\n\n    const rows = response.data.values;\n    if (!rows || rows.length === 0) {\n      console.log('No data found in the specified sheet range or sheet is empty.');\n      return [];\n    }\n\n    // Assuming the first row is headers\n    const headers = rows[0].map(header => String(header).trim()); // Ensure header is a string\n    const dataRows = rows.slice(1);\n\n    const expectedHeaders = ['Donor/Opp', 'Action/Next Step', 'Lead', 'Priority', 'Probability'];\n    // Flexible header check: ensure all expected headers are present\n    const missingHeaders = expectedHeaders.filter(eh => !headers.includes(eh));\n    if (missingHeaders.length > 0) {\n       console.warn(`Sheet is missing expected headers: [${missingHeaders.join(', ')}]. Current headers: [${headers.join(', ')}]. Data mapping might be incorrect or incomplete.`);\n    }\n\n\n    return dataRows.map((row) => {\n      const rowData: Partial<SheetRow> = {};\n      headers.forEach((header, index) => {\n        const cellValue = row[index] !== undefined && row[index] !== null ? String(row[index]) : ''; // Ensure cellValue is a string\n\n        if (expectedHeaders.includes(header)) { // Only process expected headers\n            if ((header === 'Priority' || header === 'Probability')) {\n               const value = cellValue.trim();\n               if (['High', 'Medium', 'Low'].includes(value)) {\n                  rowData[header as keyof SheetRow] = value as 'High' | 'Medium' | 'Low';\n               } else {\n                  // Log if value is not empty and not one of the allowed values\n                  if (value !== '') {\n                    console.warn(`Invalid value \"${value}\" for ${header} in row. Defaulting to Medium.`);\n                  }\n                  rowData[header as keyof SheetRow] = 'Medium'; // Default for invalid or empty\n               }\n            } else {\n               rowData[header as keyof SheetRow] = cellValue;\n            }\n        }\n      });\n      // Ensure all expected properties exist, even if corresponding header was missing or cell was empty\n      expectedHeaders.forEach(eh => {\n        const key = eh as keyof SheetRow;\n        if (!(key in rowData)) {\n          if (key === 'Priority' || key === 'Probability') {\n            rowData[key] = 'Medium'; // Default for missing enum types\n          } else {\n            rowData[key] = ''; // Default for missing string types\n          }\n        }\n      });\n      return rowData as SheetRow;\n    }).filter(row => Object.values(row).some(val => typeof val === 'string' && val.trim() !== '')); // Filter out rows that appear completely empty after processing\n\n\n  } catch (error) {\n    console.error('Error fetching sheet data from Google Sheets API:', error);\n    if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has at least read access to the Google Sheet (${SHEET_ID}).`);\n    } else if (error instanceof Error && error.message.includes('Requested entity was not found')) {\n        console.error(`Sheet or range not found. Verify GOOGLE_SHEET_ID (${SHEET_ID}) and GOOGLE_SHEET_RANGE (${SHEET_RANGE}).`);\n    } else if (error instanceof Error && (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant'))) {\n        console.error('Authentication failed. This could be due to an invalid service account email, private key, or incorrect project setup.');\n    }\n    return []; // Return empty array on error\n  }\n}\n\nexport async function appendSheetRow(rowData: Omit<SheetRow, ''>): Promise<boolean> {\n  const sheets = getSheetsClient();\n   if (!sheets) {\n      console.error(\"Cannot append row: Google Sheets client not available (possibly due to configuration issues).\");\n      return false;\n   }\n   if (!SHEET_ID) {\n     console.error(\"Cannot append row: GOOGLE_SHEET_ID is not configured.\");\n     return false;\n   }\n\n\n  // Ensure the order matches the sheet columns A:E as per expectedHeaders\n  const values = [\n    rowData['Donor/Opp'],\n    rowData['Action/Next Step'],\n    rowData.Lead,\n    rowData.Priority,\n    rowData.Probability\n  ];\n\n  try {\n    await sheets.spreadsheets.values.append({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE, // Append to the specified range\n      valueInputOption: 'USER_ENTERED', // Interpret data as if user typed it\n      insertDataOption: 'INSERT_ROWS', // Recommended for appending\n      requestBody: {\n        values: [values],\n      },\n    });\n    console.log('Row appended successfully to Google Sheet.');\n    return true;\n  } catch (error) {\n    console.error('Error appending sheet row to Google Sheets API:', error);\n     if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has write access to the Google Sheet (${SHEET_ID}).`);\n    } else if (error instanceof Error && (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant'))) {\n        console.error('Authentication failed while appending. Check service account credentials and permissions.');\n    }\n    return false;\n  }\n}\n\n// Placeholder for editing/updating existing rows if needed in the future\n// export async function updateSheetRow(rowIndex: number, rowData: SheetRow): Promise<boolean> {\n//   const sheets = getSheetsClient();\n//   if (!sheets || !SHEET_ID) return false;\n//   // Implementation would involve finding the correct row index (potentially +2 if header exists and 0-indexed)\n//   // and using sheets.spreadsheets.values.update\n//   console.log(`Updating row ${rowIndex} - Not implemented yet`);\n//   return false;\n// }\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { checkCredentials, setAuthCookie, clearAuthCookie } from './auth';\nimport { loginSchema, sheetRowSchema, sheetConfigSchema } from './validators'; // Added sheetConfigSchema\nimport { appendSheetRow, getSheetsClient } from './sheets'; // Added getSheetsClient\nimport type { SheetRowFormData, SheetConfigFormData } from './validators'; // Added SheetConfigFormData\n\nexport type FormState = {\n  message: string;\n  success: boolean;\n  errors?: Record<string, string[] | undefined>;\n  details?: string; // Optional details field for test connection\n};\n\nexport async function loginAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n  try {\n    const parsed = loginSchema.safeParse({\n      username: formData.get('username'),\n      password: formData.get('password'),\n    });\n\n    if (!parsed.success) {\n      return {\n        message: 'Invalid form data.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const { username, password } = parsed.data;\n\n    if (checkCredentials(username, password)) {\n      await setAuthCookie();\n       // Revalidate admin path to trigger UI update after login\n      revalidatePath('/admin');\n      return { message: 'Login successful!', success: true };\n    } else {\n      return { message: 'Invalid username or password.', success: false };\n    }\n  } catch (error) {\n    console.error('Login error:', error);\n    return { message: 'An unexpected error occurred during login.', success: false };\n  }\n}\n\nexport async function logoutAction(): Promise<void> {\n   await clearAuthCookie();\n   // Revalidate admin path to trigger UI update after logout\n   revalidatePath('/admin');\n}\n\n\nexport async function submitDataAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n\n  try {\n    const parsed = sheetRowSchema.safeParse({\n      'Donor/Opp': formData.get('Donor/Opp'),\n      'Action/Next Step': formData.get('Action/Next Step'),\n      Lead: formData.get('Lead'),\n      Priority: formData.get('Priority'),\n      Probability: formData.get('Probability'),\n    });\n\n    if (!parsed.success) {\n       console.log(\"Validation errors:\", parsed.error.flatten().fieldErrors);\n      return {\n        message: 'Invalid form data. Please check the fields.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const dataToAppend: SheetRowFormData = parsed.data;\n\n    // Check if sheets connection is configured before attempting append\n    if (!process.env.GOOGLE_SHEET_ID || !process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL || !process.env.GOOGLE_PRIVATE_KEY) {\n        return { message: 'Google Sheet connection is not configured on the server.', success: false };\n    }\n\n    const success = await appendSheetRow(dataToAppend);\n\n    if (success) {\n      // Revalidate the homepage cache to show the new data\n      revalidatePath('/');\n      return { message: 'Data submitted successfully!', success: true };\n    } else {\n      return { message: 'Failed to submit data to Google Sheet. Please check the server console logs for more specific error details from the Google Sheets API.', success: false };\n    }\n  } catch (error) {\n    console.error('Submit data error:', error);\n    return { message: 'An unexpected error occurred while submitting data.', success: false };\n  }\n}\n\n\nexport async function saveSheetConfigAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n  try {\n    const parsed = sheetConfigSchema.safeParse({\n      sheetId: formData.get('sheetId'),\n      sheetRange: formData.get('sheetRange'),\n      serviceAccountEmail: formData.get('serviceAccountEmail'),\n      privateKey: formData.get('privateKey'),\n    });\n\n    if (!parsed.success) {\n       console.log(\"Config Validation errors:\", parsed.error.flatten().fieldErrors);\n      return {\n        message: 'Invalid configuration data. Please check the fields.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const configData: SheetConfigFormData = parsed.data;\n\n    // --- IMPORTANT LIMITATION ---\n    // We cannot dynamically update process.env variables for the running Node.js process.\n    // Environment variables are typically loaded at application startup.\n    // Modifying .env files programmatically is risky and requires app restarts.\n    // Therefore, this action primarily serves to VALIDATE the input format.\n    // The actual connection used by getSheetData/appendSheetRow will still rely on the\n    // environment variables set when the server process started.\n\n    console.log('Received valid sheet configuration data (validation only):', {\n        sheetId: configData.sheetId,\n        sheetRange: configData.sheetRange,\n        serviceAccountEmail: configData.serviceAccountEmail,\n        privateKey: '[REDACTED]', // Avoid logging the private key\n    });\n\n    // Simulate saving - In a real scenario, this might write to a config file or DB,\n    // but that requires more infrastructure and careful handling.\n    // For now, just return success after validation.\n\n    return {\n        message: 'Configuration validated successfully. Remember to update environment variables and restart/redeploy the server for these changes to be used by the application backend.',\n        success: true\n    };\n\n  } catch (error) {\n    console.error('Save sheet config error:', error);\n    return { message: 'An unexpected error occurred while validating the configuration.', success: false };\n  }\n}\n\nexport async function testSheetConnectionAction(\n  prevState: FormState | null\n): Promise<FormState> {\n  const missingEnvVars = [];\n  if (!process.env.GOOGLE_SHEET_ID) missingEnvVars.push('GOOGLE_SHEET_ID');\n  if (!process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL) missingEnvVars.push('GOOGLE_SERVICE_ACCOUNT_EMAIL');\n  if (!process.env.GOOGLE_PRIVATE_KEY) missingEnvVars.push('GOOGLE_PRIVATE_KEY');\n  if (!process.env.GOOGLE_SHEET_RANGE) missingEnvVars.push('GOOGLE_SHEET_RANGE'); // Though not strictly for client init, it's part of config\n\n  if (missingEnvVars.length > 0) {\n    return {\n      success: false,\n      message: 'Connection test failed: Server is missing required environment variables.',\n      details: `Missing: ${missingEnvVars.join(', ')}. Please ensure these are set in your .env.local file or hosting environment and the server is restarted.`,\n    };\n  }\n\n  const sheets = getSheetsClient();\n  if (!sheets) {\n    return {\n      success: false,\n      message: 'Connection test failed: Could not initialize Google Sheets client.',\n      details: 'This usually indicates an issue with the service account credentials (email or private key format/value) or their parsing. Check server logs for more specific errors related to Google Auth initialization.',\n    };\n  }\n\n  try {\n    // Perform a benign read operation to test the connection and permissions\n    const response = await sheets.spreadsheets.get({\n      spreadsheetId: process.env.GOOGLE_SHEET_ID,\n      fields: 'properties.title', // Requesting only the title is a lightweight check\n    });\n\n    if (response.status === 200 && response.data.properties?.title) {\n      return {\n        success: true,\n        message: 'Connection test successful!',\n        details: `Successfully connected to sheet titled: \"${response.data.properties.title}\". The application should be able to read from and write to this sheet if permissions are correctly set.`,\n      };\n    } else {\n      return {\n        success: false,\n        message: 'Connection test partially successful: Client initialized, but could not retrieve sheet properties.',\n        details: `Received status ${response.status}. This might indicate issues with the Sheet ID or permissions for the service account.`,\n      };\n    }\n  } catch (error: any) {\n    console.error('Google Sheets connection test error:', error);\n    let details = 'An unexpected error occurred during the connection test.';\n    if (error.message) {\n      details = error.message;\n    }\n    if (error.response?.data?.error?.message) {\n        details = error.response.data.error.message;\n    }\n\n    if (details.includes('PERMISSION_DENIED')) {\n        details = `Permission Denied. Ensure the service account (${process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL}) has at least 'Viewer' (for reading) and 'Editor' (for writing) access to the Google Sheet (ID: ${process.env.GOOGLE_SHEET_ID}).`;\n    } else if (details.includes('Requested entity was not found')) {\n        details = `Sheet Not Found. Verify that the GOOGLE_SHEET_ID ('${process.env.GOOGLE_SHEET_ID}') is correct and the sheet exists.`;\n    } else if (details.includes('invalid_grant') || details.includes('Could not load the default credentials')) {\n        details = `Authentication Failed. This can be due to an invalid service account email, an incorrectly formatted or expired private key, or issues with the Google Cloud project setup.`;\n    }\n\n\n    return {\n      success: false,\n      message: 'Connection test failed during API call.',\n      details: details,\n    };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/login-form.tsx <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+DACA","debugId":null}},
    {"offset": {"line": 800, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/login-form.tsx\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2CACA","debugId":null}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 824, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AdminForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AdminForm() from the server but AdminForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin-form.tsx <module evaluation>\",\n    \"AdminForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+DACA","debugId":null}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AdminForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call AdminForm() from the server but AdminForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin-form.tsx\",\n    \"AdminForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,2CACA","debugId":null}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sheet-config-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SheetConfigForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetConfigForm() from the server but SheetConfigForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/sheet-config-form.tsx <module evaluation>\",\n    \"SheetConfigForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sEACA","debugId":null}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sheet-config-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SheetConfigForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetConfigForm() from the server but SheetConfigForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/sheet-config-form.tsx\",\n    \"SheetConfigForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kDACA","debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logout-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutButton() from the server but LogoutButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/logout-button.tsx <module evaluation>\",\n    \"LogoutButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kEACA","debugId":null}},
    {"offset": {"line": 914, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logout-button.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LogoutButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call LogoutButton() from the server but LogoutButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/logout-button.tsx\",\n    \"LogoutButton\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8CACA","debugId":null}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iEACA","debugId":null}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/separator.tsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6CACA","debugId":null}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/env-config-guide.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EnvConfigGuide = registerClientReference(\n    function() { throw new Error(\"Attempted to call EnvConfigGuide() from the server but EnvConfigGuide is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/env-config-guide.tsx <module evaluation>\",\n    \"EnvConfigGuide\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qEACA","debugId":null}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/env-config-guide.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EnvConfigGuide = registerClientReference(\n    function() { throw new Error(\"Attempted to call EnvConfigGuide() from the server but EnvConfigGuide is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/env-config-guide.tsx\",\n    \"EnvConfigGuide\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,iDACA","debugId":null}},
    {"offset": {"line": 1004, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1014, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/connection-tester.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ConnectionTester = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConnectionTester() from the server but ConnectionTester is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/connection-tester.tsx <module evaluation>\",\n    \"ConnectionTester\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sEACA","debugId":null}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/connection-tester.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ConnectionTester = registerClientReference(\n    function() { throw new Error(\"Attempted to call ConnectionTester() from the server but ConnectionTester is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/connection-tester.tsx\",\n    \"ConnectionTester\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,kDACA","debugId":null}},
    {"offset": {"line": 1042, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1133, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/page.tsx"],"sourcesContent":["\nimport { cookies } from 'next/headers';\nimport { isAuthenticated } from '@/lib/auth';\nimport { LoginForm } from '@/components/login-form';\nimport { AdminForm } from '@/components/admin-form';\nimport { SheetConfigForm } from '@/components/sheet-config-form';\nimport { LogoutButton } from '@/components/logout-button';\nimport { Separator } from '@/components/ui/separator';\nimport { EnvConfigGuide } from '@/components/env-config-guide';\nimport { ConnectionTester } from '@/components/connection-tester';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { FileText, TestTubeDiagonal } from 'lucide-react';\n\n\nexport default function AdminPage() {\n  const cookieStore = cookies();\n  const loggedIn = isAuthenticated(cookieStore);\n\n  return (\n    <div className=\"space-y-8\">\n      {loggedIn ? (\n        <>\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-3xl font-bold\">Admin Panel</h1>\n            <LogoutButton />\n          </div>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle>Add New Entry</CardTitle>\n              <CardDescription>Add new entries to the Google Sheet.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <AdminForm />\n            </CardContent>\n          </Card>\n\n          <Separator className=\"my-10\" />\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <Card>\n              <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <FileText className=\"h-5 w-5\" />\n                    .env.local Configuration Guide\n                  </CardTitle>\n                  <CardDescription>\n                    Instructions for setting up your local environment variables.\n                  </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <EnvConfigGuide />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                    <TestTubeDiagonal className=\"h-5 w-5\" />\n                    Google Sheet Connection Test\n                </CardTitle>\n                <CardDescription>\n                  Test the live connection to Google Sheets using current server environment variables.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <ConnectionTester />\n              </CardContent>\n            </Card>\n          </div>\n\n          <Separator className=\"my-10\" />\n          \n          <SheetConfigForm />\n\n        </>\n      ) : (\n        <LoginForm />\n      )}\n    </div>\n  );\n}\n\n// Ensure dynamic rendering because authentication depends on cookies\nexport const dynamic = 'force-dynamic';\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AAGe,SAAS;IACtB,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAC1B,MAAM,WAAW,CAAA,GAAA,kHAAA,CAAA,kBAAe,AAAD,EAAE;IAEjC,qBACE,8OAAC;QAAI,WAAU;kBACZ,yBACC;;8BACE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,8OAAC,sIAAA,CAAA,eAAY;;;;;;;;;;;8BAGf,8OAAC,gIAAA,CAAA,OAAI;;sCACH,8OAAC,gIAAA,CAAA,aAAU;;8CACT,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,kBAAe;8CAAC;;;;;;;;;;;;sCAEnB,8OAAC,gIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC,mIAAA,CAAA,YAAS;;;;;;;;;;;;;;;;8BAId,8OAAC,qIAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;8BAErB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,gIAAA,CAAA,OAAI;;8CACH,8OAAC,gIAAA,CAAA,aAAU;;sDACP,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;;8DACnB,8OAAC,8MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAGlC,8OAAC,gIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAIrB,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,4IAAA,CAAA,iBAAc;;;;;;;;;;;;;;;;sCAInB,8OAAC,gIAAA,CAAA,OAAI;;8CACH,8OAAC,gIAAA,CAAA,aAAU;;sDACT,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;;8DACjB,8OAAC,kOAAA,CAAA,mBAAgB;oDAAC,WAAU;;;;;;gDAAY;;;;;;;sDAG5C,8OAAC,gIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAInB,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,0IAAA,CAAA,mBAAgB;;;;;;;;;;;;;;;;;;;;;;8BAKvB,8OAAC,qIAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;8BAErB,8OAAC,6IAAA,CAAA,kBAAe;;;;;;yCAIlB,8OAAC,mIAAA,CAAA,YAAS;;;;;;;;;;AAIlB;AAGO,MAAM,UAAU","debugId":null}}]
}