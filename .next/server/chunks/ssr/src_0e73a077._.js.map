{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { checkCredentials, setAuthCookie, clearAuthCookie } from './auth';\nimport { loginSchema, sheetRowSchema, sheetConfigSchema } from './validators'; // Added sheetConfigSchema\nimport { appendSheetRow, getSheetsClient } from './sheets'; // Added getSheetsClient\nimport type { SheetRowFormData, SheetConfigFormData } from './validators'; // Added SheetConfigFormData\n\nexport type FormState = {\n  message: string;\n  success: boolean;\n  errors?: Record<string, string[] | undefined>;\n  details?: string; // Optional details field for test connection\n};\n\nexport async function loginAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n  try {\n    const parsed = loginSchema.safeParse({\n      username: formData.get('username'),\n      password: formData.get('password'),\n    });\n\n    if (!parsed.success) {\n      return {\n        message: 'Invalid form data.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const { username, password } = parsed.data;\n\n    if (checkCredentials(username, password)) {\n      await setAuthCookie();\n      revalidatePath('/admin'); // Revalidate admin path to trigger UI update after login\n      return { message: 'Login successful!', success: true };\n    } else {\n      return { message: 'Invalid username or password.', success: false };\n    }\n  } catch (error) {\n    console.error('Login error:', error);\n    return { message: 'An unexpected error occurred during login.', success: false };\n  }\n}\n\nexport async function logoutAction(): Promise<void> {\n   await clearAuthCookie();\n   revalidatePath('/admin'); // Revalidate admin path to trigger UI update after logout\n}\n\n\nexport async function submitDataAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n\n  try {\n    const parsed = sheetRowSchema.safeParse({\n      'Donor/Opp': formData.get('Donor/Opp'),\n      'Action/Next Step': formData.get('Action/Next Step'),\n      Lead: formData.get('Lead'),\n      Priority: formData.get('Priority'),\n      Probability: formData.get('Probability'),\n    });\n\n    if (!parsed.success) {\n       console.log(\"Validation errors:\", parsed.error.flatten().fieldErrors);\n      return {\n        message: 'Invalid form data. Please check the fields.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const dataToAppend: SheetRowFormData = parsed.data;\n\n    if (!process.env.GOOGLE_SHEET_ID || !process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL || !process.env.GOOGLE_PRIVATE_KEY) {\n        return { message: 'Google Sheet connection is not configured on the server.', success: false };\n    }\n\n    const success = await appendSheetRow(dataToAppend);\n\n    if (success) {\n      revalidatePath('/'); // Revalidate the homepage cache to show the new data\n      // revalidatePath('/admin'); // Commented out: Also revalidate admin page, this might be causing logout issues.\n      // The dashboard on the admin page might not update immediately, but this should prevent logout.\n      return { message: 'Data submitted successfully!', success: true };\n    } else {\n      return { message: 'Failed to submit data to Google Sheet. Please check the server console logs for more specific error details from the Google Sheets API.', success: false };\n    }\n  } catch (error) {\n    console.error('Submit data error:', error);\n    return { message: 'An unexpected error occurred while submitting data.', success: false };\n  }\n}\n\n\nexport async function saveSheetConfigAction(\n  prevState: FormState | null,\n  formData: FormData\n): Promise<FormState> {\n  try {\n    const parsed = sheetConfigSchema.safeParse({\n      sheetId: formData.get('sheetId'),\n      sheetRange: formData.get('sheetRange'),\n      serviceAccountEmail: formData.get('serviceAccountEmail'),\n      privateKey: formData.get('privateKey'),\n    });\n\n    if (!parsed.success) {\n       console.log(\"Config Validation errors:\", parsed.error.flatten().fieldErrors);\n      return {\n        message: 'Invalid configuration data. Please check the fields.',\n        success: false,\n        errors: parsed.error.flatten().fieldErrors,\n      };\n    }\n\n    const configData: SheetConfigFormData = parsed.data;\n\n    // This action now primarily serves to validate the format and generate the .env.local preview.\n    // It does not save anything persistently on the server itself.\n    // The user is responsible for updating .env.local and restarting.\n    console.log('Received valid sheet configuration data for .env.local preview generation:', {\n        sheetId: configData.sheetId,\n        sheetRange: configData.sheetRange,\n        serviceAccountEmail: configData.serviceAccountEmail,\n        privateKey: '[REDACTED - validated but not stored by this action]', \n    });\n    \n    // Revalidate admin to reflect any UI changes potentially related to config form state,\n    // but the actual server config relies on env vars restart.\n    revalidatePath('/admin'); \n\n    return {\n        message: 'Configuration format validated successfully. The preview for .env.local has been generated. Copy the content into your .env.local file and restart/redeploy the server for these settings to be used by the application backend.',\n        success: true\n    };\n\n  } catch (error) {\n    console.error('Save sheet config error:', error);\n    return { message: 'An unexpected error occurred while validating the configuration for preview.', success: false };\n  }\n}\n\nexport async function testSheetConnectionAction(\n  prevState: FormState | null\n): Promise<FormState> {\n  const missingEnvVars = [];\n  if (!process.env.GOOGLE_SHEET_ID) missingEnvVars.push('GOOGLE_SHEET_ID');\n  if (!process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL) missingEnvVars.push('GOOGLE_SERVICE_ACCOUNT_EMAIL');\n  if (!process.env.GOOGLE_PRIVATE_KEY || process.env.GOOGLE_PRIVATE_KEY.trim() === '' || process.env.GOOGLE_PRIVATE_KEY.trim() === '\"\"' || process.env.GOOGLE_PRIVATE_KEY.trim() === \"''\") missingEnvVars.push('GOOGLE_PRIVATE_KEY');\n  if (!process.env.GOOGLE_SHEET_RANGE) missingEnvVars.push('GOOGLE_SHEET_RANGE');\n\n  if (missingEnvVars.length > 0) {\n    return {\n      success: false,\n      message: 'Connection test failed: Server is missing required environment variables.',\n      details: `Missing: ${missingEnvVars.join(', ')}. Please ensure these are set in your .env.local file or hosting environment and the server is restarted. The private key must be the actual key, not an empty string.`,\n    };\n  }\n\n  const sheets = await getSheetsClient();\n  if (!sheets) {\n    return {\n      success: false,\n      message: 'Connection test failed: Could not initialize Google Sheets client.',\n      details: 'This usually indicates an issue with the service account credentials (email or private key format/value) or their parsing. Check server logs for more specific errors related to Google Auth initialization. Ensure GOOGLE_PRIVATE_KEY is correctly formatted and not empty or malformed (e.g. missing PEM markers, incorrect newline escaping).',\n    };\n  }\n\n  try {\n    const response = await sheets.spreadsheets.get({\n      spreadsheetId: process.env.GOOGLE_SHEET_ID,\n      fields: 'properties.title', \n    });\n\n    if (response.status === 200 && response.data.properties?.title) {\n       revalidatePath('/admin'); // Revalidate on successful test\n      return {\n        success: true,\n        message: 'Connection test successful!',\n        details: `Successfully connected to sheet titled: \"${response.data.properties.title}\". The application should be able to read from and write to this sheet if permissions are correctly set.`,\n      };\n    } else {\n      return {\n        success: false,\n        message: 'Connection test partially successful: Client initialized, but could not retrieve sheet properties.',\n        details: `Received status ${response.status}. This might indicate issues with the Sheet ID or permissions for the service account.`,\n      };\n    }\n  } catch (error: any) {\n    console.error('Google Sheets connection test error:', error);\n    let details = 'An unexpected error occurred during the connection test.';\n    if (error.message) {\n      details = error.message;\n    }\n    if (error.response?.data?.error?.message) {\n        details = error.response.data.error.message;\n    }\n\n    if (details.includes('PERMISSION_DENIED')) {\n        details = `Permission Denied. Ensure the service account (${process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL}) has at least 'Viewer' (for reading) and 'Editor' (for writing) access to the Google Sheet (ID: ${process.env.GOOGLE_SHEET_ID}).`;\n    } else if (details.includes('Requested entity was not found')) {\n        details = `Sheet Not Found. Verify that the GOOGLE_SHEET_ID ('${process.env.GOOGLE_SHEET_ID}') is correct and the sheet exists.`;\n    } else if (details.includes('invalid_grant') || details.includes('Could not load the default credentials')) {\n        details = `Authentication Failed. This can be due to an invalid service account email, an incorrectly formatted or expired private key, or issues with the Google Cloud project setup. Ensure GOOGLE_PRIVATE_KEY is valid.`;\n    } else if (error.message?.includes('error:0A000152:SSL routines::unsafe legacy renegotiation disabled') || error.message?.includes('UNABLE_TO_GET_ISSUER_CERT_LOCALLY')) {\n        details = `SSL/TLS connection issue. This might be a network configuration problem, proxy issue, or an outdated CA certificate store on the server. Original error: ${error.message}`;\n    } else if (error.message?.includes('error:1E08010C:DECODER routines::unsupported') || error.message?.includes('PEM routines') || error.message?.includes('private key') || error.message?.includes('asn1 encoding')) {\n        details = `Private key format error. The GOOGLE_PRIVATE_KEY provided is likely malformed or not a valid PEM key. It should start with '-----BEGIN PRIVATE KEY-----' and end with '-----END PRIVATE KEY-----', with the key content in between. Original error: ${error.message}`;\n    }\n    \n\n    return {\n      success: false,\n      message: 'Connection test failed during API call.',\n      details: details,\n    };\n  }\n}\n\n"],"names":[],"mappings":";;;;;;;;;IAgBsB;IAiCA;IAMA;IA8CA;IAgDA","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/validators.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const loginSchema = z.object({\n  username: z.string().min(1, 'Username is required'),\n  password: z.string().min(1, 'Password is required'),\n});\n\nexport type LoginFormData = z.infer<typeof loginSchema>;\n\nexport const sheetRowSchema = z.object({\n  'Donor/Opp': z.string().min(1, 'Donor/Opportunity is required'),\n  'Action/Next Step': z.string().min(1, 'Action/Next Step is required'),\n  Lead: z.string().min(1, 'Lead is required'),\n  Priority: z.enum(['High', 'Medium', 'Low'], {\n    errorMap: () => ({ message: 'Please select a valid priority' }),\n  }),\n  Probability: z.enum(['High', 'Medium', 'Low'], {\n    errorMap: () => ({ message: 'Please select a valid probability' }),\n  }),\n});\n\nexport type SheetRowFormData = z.infer<typeof sheetRowSchema>;\n\n// Schema for Google Sheet Configuration Form\nexport const sheetConfigSchema = z.object({\n    sheetId: z.string().min(10, 'Sheet ID seems too short. Please check the copied ID.').trim(),\n    sheetRange: z.string()\n                .min(3, 'Sheet range is required (e.g., Sheet1!A:E)')\n                .regex(/^[a-zA-Z0-9\\s]+!([A-Z]+):([A-Z]+)$/, 'Invalid range format. Expected format like \"Sheet1!A:E\" with uppercase column letters.'),\n    serviceAccountEmail: z.string().email('Invalid service account email format. Please enter a valid email address.'),\n    privateKey: z.string()\n        .transform(key => {\n            // 1. Replace literal \"\\\\n\" (escaped newlines common in JSON strings) with actual newline characters.\n            let processedKey = key.replace(/\\\\n/g, '\\n');\n            // 2. Normalize Windows-style newlines (\\r\\n) to Unix-style newlines (\\n).\n            processedKey = processedKey.replace(/\\r\\n/g, '\\n');\n            // 3. Trim any leading/trailing whitespace from the entire key block.\n            processedKey = processedKey.trim();\n            return processedKey;\n        })\n        .pipe(\n            z.string()\n            .min(100, 'Private key is too short. Ensure you have copied the full key from the JSON file.')\n            .startsWith('-----BEGIN PRIVATE KEY-----', 'Private key must start with \"-----BEGIN PRIVATE KEY-----\". Check for missing parts or extra characters at the beginning.')\n            .endsWith('-----END PRIVATE KEY-----', 'Private key must end with \"-----END PRIVATE KEY-----\". Check for missing parts or extra characters at the end.')\n            .refine(key => key.includes('\\n'), { message: \"Private key must be a multi-line string. Ensure newlines are preserved when copying.\" })\n            .refine(key => {\n                // Check for common errors like pasting the entire JSON key-value pair or including quotes\n                // These checks are against the already transformed key (e.g. outer quotes should be removed by .trim())\n                if (key.startsWith('\"-----BEGIN PRIVATE KEY-----') || key.startsWith(\"'-----BEGIN PRIVATE KEY-----\")) {\n                    return false;\n                }\n                if (key.includes('\"private_key\":') || key.includes(\"'private_key':\")) {\n                    return false;\n                }\n                // Ensure there's content between the header and footer\n                const coreKey = key.replace('-----BEGIN PRIVATE KEY-----', '').replace('-----END PRIVATE KEY-----', '').trim();\n                return coreKey.length > 0;\n            }, {message: \"It looks like you might have pasted more than just the private key string, or the key content is empty. Please paste only the characters starting with -----BEGIN PRIVATE KEY----- and ending with -----END PRIVATE KEY-----.\"})\n        ),\n});\n\nexport type SheetConfigFormData = z.infer<typeof sheetConfigSchema>;\n\n"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAIO,MAAM,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC/B,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACtC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,UAAU,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAM,EAAE;QAC1C,UAAU,IAAM,CAAC;gBAAE,SAAS;YAAiC,CAAC;IAChE;IACA,aAAa,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;QAAU;KAAM,EAAE;QAC7C,UAAU,IAAM,CAAC;gBAAE,SAAS;YAAoC,CAAC;IACnE;AACF;AAKO,MAAM,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,yDAAyD,IAAI;IACzF,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GACP,GAAG,CAAC,GAAG,8CACP,KAAK,CAAC,sCAAsC;IACzD,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACtC,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM,GACf,SAAS,CAAC,CAAA;QACP,qGAAqG;QACrG,IAAI,eAAe,IAAI,OAAO,CAAC,QAAQ;QACvC,0EAA0E;QAC1E,eAAe,aAAa,OAAO,CAAC,SAAS;QAC7C,qEAAqE;QACrE,eAAe,aAAa,IAAI;QAChC,OAAO;IACX,GACC,IAAI,CACD,oIAAA,CAAA,IAAC,CAAC,MAAM,GACP,GAAG,CAAC,KAAK,qFACT,UAAU,CAAC,+BAA+B,4HAC1C,QAAQ,CAAC,6BAA6B,kHACtC,MAAM,CAAC,CAAA,MAAO,IAAI,QAAQ,CAAC,OAAO;QAAE,SAAS;IAAuF,GACpI,MAAM,CAAC,CAAA;QACJ,0FAA0F;QAC1F,wGAAwG;QACxG,IAAI,IAAI,UAAU,CAAC,mCAAmC,IAAI,UAAU,CAAC,iCAAiC;YAClG,OAAO;QACX;QACA,IAAI,IAAI,QAAQ,CAAC,qBAAqB,IAAI,QAAQ,CAAC,mBAAmB;YAClE,OAAO;QACX;QACA,uDAAuD;QACvD,MAAM,UAAU,IAAI,OAAO,CAAC,+BAA+B,IAAI,OAAO,CAAC,6BAA6B,IAAI,IAAI;QAC5G,OAAO,QAAQ,MAAM,GAAG;IAC5B,GAAG;QAAC,SAAS;IAA+N;AAExP","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin-form.tsx"],"sourcesContent":["'use client';\n\nimport { useActionState } from 'react'; // Correct import for useActionState\nimport { useFormStatus } from 'react-dom'; // Correct import for useFormStatus\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { submitDataAction, type FormState } from '@/lib/actions';\nimport { sheetRowSchema, type SheetRowFormData } from '@/lib/validators';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Terminal } from 'lucide-react';\nimport { useEffect } from 'react';\nimport { useToast } from '@/hooks/use-toast';\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending}>\n      {pending ? 'Submitting...' : 'Submit Data'}\n    </Button>\n  );\n}\n\nexport function AdminForm() {\n  const [state, formAction] = useActionState<FormState | null, FormData>(submitDataAction, null);\n  const { toast } = useToast();\n\n  const form = useForm<SheetRowFormData>({\n    resolver: zodResolver(sheetRowSchema),\n    defaultValues: {\n      'Donor/Opp': '',\n      'Action/Next Step': '',\n      Lead: '',\n      Priority: undefined, // Let placeholder show\n      Probability: undefined,\n    },\n  });\n\n  // Display toast message on state change and reset form on success\n  useEffect(() => {\n    if (state?.message) {\n      toast({\n        title: state.success ? 'Success' : 'Error',\n        description: state.message,\n        variant: state.success ? 'default' : 'destructive',\n      });\n      if (state.success) {\n        form.reset(); // Clear form fields on successful submission\n      }\n    }\n  }, [state, toast, form]);\n\n  return (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle>Add New Entry</CardTitle>\n        <CardDescription>Enter the details below. The data will be added to the Google Sheet.</CardDescription>\n      </CardHeader>\n       {/* Display general error message */}\n        {!state?.success && state?.message && !state.errors && (\n             <CardContent>\n                 <Alert variant=\"destructive\">\n                   <Terminal className=\"h-4 w-4\" />\n                   <AlertTitle>Submission Failed</AlertTitle>\n                   <AlertDescription>{state.message}</AlertDescription>\n                 </Alert>\n            </CardContent>\n        )}\n      <Form {...form}>\n        <form action={formAction}>\n          <CardContent className=\"space-y-4\">\n             <FormField\n                control={form.control}\n                name=\"Donor/Opp\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Donor/Opportunity</FormLabel>\n                    <FormControl>\n                        <Input placeholder=\"e.g., SIDA Grant\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                     {state?.errors?.['Donor/Opp'] && (\n                       <p className=\"text-sm font-medium text-destructive\">{state.errors['Donor/Opp'].join(', ')}</p>\n                    )}\n                    </FormItem>\n                )}\n                />\n\n            <FormField\n              control={form.control}\n              name=\"Action/Next Step\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Action/Next Step</FormLabel>\n                  <FormControl>\n                    <Textarea placeholder=\"Describe the next steps...\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                  {state?.errors?.['Action/Next Step'] && (\n                    <p className=\"text-sm font-medium text-destructive\">{state.errors['Action/Next Step'].join(', ')}</p>\n                  )}\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"Lead\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Lead</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Katie\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                   {state?.errors?.Lead && (\n                    <p className=\"text-sm font-medium text-destructive\">{state.errors.Lead.join(', ')}</p>\n                  )}\n                </FormItem>\n              )}\n            />\n\n             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <FormField\n                control={form.control}\n                name=\"Priority\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Priority</FormLabel>\n                    <Select\n                        onValueChange={field.onChange}\n                        defaultValue={field.value}\n                        value={field.value}\n                        name={field.name} // Ensure name attribute is passed for FormData\n                    >\n                        <FormControl>\n                        <SelectTrigger>\n                            <SelectValue placeholder=\"Select Priority\" />\n                        </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                        <SelectItem value=\"High\">High</SelectItem>\n                        <SelectItem value=\"Medium\">Medium</SelectItem>\n                        <SelectItem value=\"Low\">Low</SelectItem>\n                        </SelectContent>\n                    </Select>\n                    <FormMessage />\n                     {state?.errors?.Priority && (\n                        <p className=\"text-sm font-medium text-destructive\">{state.errors.Priority.join(', ')}</p>\n                    )}\n                    </FormItem>\n                )}\n                />\n\n                <FormField\n                control={form.control}\n                name=\"Probability\"\n                render={({ field }) => (\n                    <FormItem>\n                    <FormLabel>Probability</FormLabel>\n                     <Select\n                        onValueChange={field.onChange}\n                        defaultValue={field.value}\n                        value={field.value}\n                        name={field.name} // Ensure name attribute is passed for FormData\n                    >\n                        <FormControl>\n                        <SelectTrigger>\n                            <SelectValue placeholder=\"Select Probability\" />\n                        </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                        <SelectItem value=\"High\">High</SelectItem>\n                        <SelectItem value=\"Medium\">Medium</SelectItem>\n                        <SelectItem value=\"Low\">Low</SelectItem>\n                        </SelectContent>\n                    </Select>\n                    <FormMessage />\n                     {state?.errors?.Probability && (\n                       <p className=\"text-sm font-medium text-destructive\">{state.errors.Probability.join(', ')}</p>\n                    )}\n                    </FormItem>\n                )}\n                />\n             </div>\n\n          </CardContent>\n          <CardFooter className=\"flex justify-end\">\n            <SubmitButton />\n          </CardFooter>\n        </form>\n      </Form>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1283, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sheet-config-form.tsx"],"sourcesContent":["'use client';\n\nimport React, { useActionState, useEffect, useState, useMemo } from 'react'; // Correct import for useActionState, added useMemo\nimport { useFormStatus } from 'react-dom'; // Correct import for useFormStatus\nimport { useForm, useWatch } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { saveSheetConfigAction, type FormState } from '@/lib/actions';\nimport { sheetConfigSchema, type SheetConfigFormData } from '@/lib/validators';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card';\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Terminal, Settings, Info, FileText, ClipboardCopy } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending}>\n      {pending ? 'Validating & Generating Preview...' : 'Generate .env.local Content Preview'}\n    </Button>\n  );\n}\n\nexport function SheetConfigForm() {\n  const memoizedDefaultValues = useMemo<SheetConfigFormData>(() => ({\n    sheetId: process.env.NEXT_PUBLIC_GOOGLE_SHEET_ID_DEFAULT || '',\n    sheetRange: process.env.NEXT_PUBLIC_GOOGLE_SHEET_RANGE_DEFAULT || 'Sheet1!A:E',\n    serviceAccountEmail: process.env.NEXT_PUBLIC_GOOGLE_SERVICE_ACCOUNT_EMAIL_DEFAULT || '',\n    privateKey: process.env.NEXT_PUBLIC_GOOGLE_PRIVATE_KEY_DEFAULT || '',\n  }), []);\n\n\n  const [state, formAction] = useActionState<FormState | null, FormData>(saveSheetConfigAction, null);\n  const { toast } = useToast();\n  const [envPreviewContent, setEnvPreviewContent] = useState('');\n\n  const form = useForm<SheetConfigFormData>({\n    resolver: zodResolver(sheetConfigSchema),\n    defaultValues: memoizedDefaultValues,\n  });\n\n  const watchedValues = useWatch({ control: form.control });\n\n  useEffect(() => {\n    const { sheetId, sheetRange, serviceAccountEmail, privateKey: formPrivateKey } = watchedValues || {};\n\n    let envFormattedPrivateKey: string;\n    const currentPrivateKey = typeof formPrivateKey === 'string' ? formPrivateKey : '';\n\n\n    if (currentPrivateKey.trim()) {\n      // Format the key for .env: replace actual newlines with literal '\\n' and wrap in quotes\n      const escapedKey = currentPrivateKey\n        .trim() // Trim leading/trailing whitespace from the key block itself\n        .replace(/\\r\\n/g, '\\n') // Normalize Windows newlines\n        .replace(/\\n/g, '\\\\n'); // Escape newlines for .env string\n      envFormattedPrivateKey = `\"${escapedKey}\"`;\n    } else {\n      envFormattedPrivateKey = '\"-----BEGIN PRIVATE KEY-----\\\\nYOUR_PRIVATE_KEY_LINE_1\\\\nYOUR_PRIVATE_KEY_LINE_2\\\\n-----END PRIVATE KEY-----\"';\n    }\n\n    const adminUsername = process.env.NEXT_PUBLIC_ADMIN_USERNAME_DEFAULT || 'admin';\n    const adminPassword = process.env.NEXT_PUBLIC_ADMIN_PASSWORD_DEFAULT || 'password';\n\n    const content = `\n# Google Sheets API Credentials\nGOOGLE_SHEET_ID=${sheetId || 'your_google_sheet_id_here'}\nGOOGLE_SHEET_RANGE=${sheetRange || 'Sheet1!A:E'}\nGOOGLE_SERVICE_ACCOUNT_EMAIL=${serviceAccountEmail || 'your-service-account-email@your-project-id.iam.gserviceaccount.com'}\n# The private key below should be a single line in your .env.local file,\n# with actual newline characters represented as \\\\n, all enclosed in double quotes.\n# Example: GOOGLE_PRIVATE_KEY=\"-----BEGIN PRIVATE KEY-----\\\\nYOUR_KEY_PART_1\\\\nYOUR_KEY_PART_2\\\\n-----END PRIVATE KEY-----\"\nGOOGLE_PRIVATE_KEY=${envFormattedPrivateKey}\n\n# Admin Credentials for the Dashboard\nADMIN_USERNAME=${adminUsername}\nADMIN_PASSWORD=${adminPassword}\n`;\n    setEnvPreviewContent(content.trim());\n  }, [watchedValues]);\n\n  const handleCopyToClipboard = () => {\n    if (!envPreviewContent) return;\n    navigator.clipboard.writeText(envPreviewContent)\n      .then(() => {\n        toast({\n          title: \"Copied to clipboard!\",\n          description: \"You can now paste this into your .env.local file.\",\n        });\n      })\n      .catch(err => {\n        toast({\n          title: \"Copy failed\",\n          description: \"Could not copy to clipboard. Please copy manually.\",\n          variant: \"destructive\",\n        });\n      });\n  };\n\n  useEffect(() => {\n    if (state?.message) {\n      toast({\n        title: state.success ? 'Configuration Notice' : 'Validation Error',\n        description: state.message,\n        variant: state.success ? 'default' : 'destructive',\n      });\n    }\n  }, [state, toast]);\n\n  return (\n    <Card className=\"w-full max-w-2xl\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Settings className=\"h-5 w-5\" />\n          Google Sheet Configuration\n        </CardTitle>\n        <CardDescription>\n          Enter the connection details for your Google Sheet. Use the form below to generate the content for your <code className=\"font-mono bg-muted px-1 py-0.5 rounded\">.env.local</code> file. After generating and copying the content, you must manually update your <code className=\"font-mono bg-muted px-1 py-0.5 rounded\">.env.local</code> file and restart the server.\n        </CardDescription>\n      </CardHeader>\n      {!state?.success && state?.message && !state.errors && (\n        <CardContent>\n          <Alert variant=\"destructive\">\n            <Terminal className=\"h-4 w-4\" />\n            <AlertTitle>Configuration Error</AlertTitle>\n            <AlertDescription>{state.message}</AlertDescription>\n          </Alert>\n        </CardContent>\n      )}\n      <Form {...form}>\n        <form action={formAction}>\n          <CardContent className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"sheetId\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Sheet ID (<code className=\"font-mono text-xs\">GOOGLE_SHEET_ID</code>)</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"Enter Google Sheet ID\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                  {state?.errors?.sheetId && (\n                    <p className=\"text-sm font-medium text-destructive\">{state.errors.sheetId.join(', ')}</p>\n                  )}\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"sheetRange\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Data Range (<code className=\"font-mono text-xs\">GOOGLE_SHEET_RANGE</code>)</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Sheet1!A:E\" {...field} />\n                  </FormControl>\n                   <FormDescription>\n                     The range where data is read and appended (e.g., Sheet1!A:E). Must be uppercase columns.\n                   </FormDescription>\n                  <FormMessage />\n                   {state?.errors?.sheetRange && (\n                     <p className=\"text-sm font-medium text-destructive\">{state.errors.sheetRange.join(', ')}</p>\n                  )}\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"serviceAccountEmail\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Service Account Email (<code className=\"font-mono text-xs\">GOOGLE_SERVICE_ACCOUNT_EMAIL</code>)</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"Enter service account email\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                  {state?.errors?.serviceAccountEmail && (\n                    <p className=\"text-sm font-medium text-destructive\">{state.errors.serviceAccountEmail.join(', ')}</p>\n                  )}\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"privateKey\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Private Key (<code className=\"font-mono text-xs\">GOOGLE_PRIVATE_KEY</code>)</FormLabel>\n                  <FormControl>\n                    <Textarea placeholder=\"Paste the service account private key here (starts with -----BEGIN PRIVATE KEY-----)\" {...field} rows={8} />\n                  </FormControl>\n                   <FormDescription>\n                     Paste the entire private key string from your service account JSON file.\n                     It must start with <code>-----BEGIN PRIVATE KEY-----</code> and end with <code>-----END PRIVATE KEY-----</code>.\n                     Include all characters and line breaks (newlines) exactly as they appear in the JSON value for the \"private_key\" field.\n                   </FormDescription>\n                  <FormMessage />\n                  {state?.errors?.privateKey && (\n                    <p className=\"text-sm font-medium text-destructive\">{state.errors.privateKey.join(', ')}</p>\n                  )}\n                </FormItem>\n              )}\n            />\n\n            <Card className=\"shadow-md\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2 text-lg\">\n                  <FileText className=\"h-5 w-5\" />\n                  Preview for <code className=\"font-mono bg-muted px-1.5 py-1 rounded\">.env.local</code>\n                </CardTitle>\n                <CardDescription>\n                  Based on the values entered above, copy the content below and paste it into your <code className=\"font-mono bg-muted px-1 py-0.5 rounded\">.env.local</code> file in the project root.\n                  After updating the file, you **must restart your Next.js development server**.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"relative rounded-md bg-muted/80 dark:bg-muted/50 p-4 border\">\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={handleCopyToClipboard}\n                    className=\"absolute top-2 right-2 text-xs\"\n                    aria-label=\"Copy .env.local content\"\n                    disabled={!envPreviewContent}\n                  >\n                    <ClipboardCopy className=\"h-3.5 w-3.5 mr-1.5\" />\n                    Copy\n                  </Button>\n                  <pre className=\"text-xs whitespace-pre-wrap break-all font-mono\">\n                    {envPreviewContent || 'Enter values in the form to generate the .env.local content preview...'}\n                  </pre>\n                </div>\n              </CardContent>\n            </Card>\n\n             <Alert variant=\"default\">\n                <Info className=\"h-4 w-4\" />\n                <AlertTitle>Configuration Persistence</AlertTitle>\n                <AlertDescription>\n                    Generating this preview and validating the settings confirms their format. However, the application backend primarily relies on **environment variables** set during startup (e.g., in <code className=\"font-mono bg-muted px-1 py-0.5 rounded\">.env.local</code> or hosting provider settings).\n                    <br /><br />\n                    For these changes to be used by the application, you **must** manually update your <code className=\"font-mono bg-muted px-1 py-0.5 rounded\">.env.local</code> file (using the preview above) and then **restart or redeploy** your application.\n                </AlertDescription>\n             </Alert>\n\n          </CardContent>\n          <CardFooter className=\"flex justify-end\">\n            <SubmitButton />\n          </CardFooter>\n        </form>\n      </Form>\n    </Card>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1995, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logout-button.tsx"],"sourcesContent":["'use client';\n\nimport { logoutAction } from '@/lib/actions';\nimport { Button } from '@/components/ui/button';\nimport { LogOut } from 'lucide-react';\n\nexport function LogoutButton() {\n  return (\n    <form action={logoutAction}>\n      <Button type=\"submit\" variant=\"outline\" size=\"sm\">\n        <LogOut className=\"mr-2 h-4 w-4\" />\n        Logout\n      </Button>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS;IACd,qBACE,8OAAC;QAAK,QAAQ,qHAAA,CAAA,eAAY;kBACxB,cAAA,8OAAC,kIAAA,CAAA,SAAM;YAAC,MAAK;YAAS,SAAQ;YAAU,MAAK;;8BAC3C,8OAAC,0MAAA,CAAA,SAAM;oBAAC,WAAU;;;;;;gBAAiB;;;;;;;;;;;;AAK3C","debugId":null}},
    {"offset": {"line": 2041, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/connection-tester.tsx"],"sourcesContent":["\n'use client';\n\nimport { useActionState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { testSheetConnectionAction, type FormState } from '@/lib/actions';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { CheckCircle, XCircle, Loader2, Info } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface ConnectionTesterProps {\n  onConnectionSuccess?: () => void;\n}\n\nexport function ConnectionTester({ onConnectionSuccess }: ConnectionTesterProps) {\n  const [state, formAction, pending] = useActionState<FormState | null, null>(\n    (prevState, _formData: null) => testSheetConnectionAction(prevState),\n    null\n  );\n  \n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (state) {\n      toast({\n        title: state.success ? 'Connection Test Result' : 'Connection Test Failed',\n        description: state.message,\n        variant: state.success ? 'default' : 'destructive',\n        duration: state.success ? 5000 : 10000,\n      });\n      if (state.success && onConnectionSuccess) {\n        onConnectionSuccess();\n      }\n    }\n  }, [state, toast, onConnectionSuccess]);\n\n  return (\n    <div className=\"space-y-4\">\n      <form\n        action={() => {\n          formAction(null); \n        }}\n      >\n        <Button type=\"submit\" disabled={pending} className=\"w-full\">\n          {pending ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Testing Connection...\n            </>\n          ) : (\n            'Test Live Google Sheet Connection'\n          )}\n        </Button>\n      </form>\n\n      {state && (\n        <Alert variant={state.success ? 'default' : 'destructive'} className=\"mt-4\">\n          {state.success ? <CheckCircle className=\"h-4 w-4\" /> : <XCircle className=\"h-4 w-4\" />}\n          <AlertTitle>{state.success ? 'Success!' : 'Failed!'}</AlertTitle>\n          <AlertDescription>\n            {state.message}\n            {state.details && (\n                <p className=\"text-xs mt-2 text-muted-foreground bg-secondary p-2 rounded-md\">\n                    <strong>Details:</strong> {state.details}\n                </p>\n            )}\n          </AlertDescription>\n        </Alert>\n      )}\n       <Alert variant=\"default\" className=\"mt-4\">\n          <Info className=\"h-4 w-4\" />\n          <AlertTitle>Important Note</AlertTitle>\n          <AlertDescription>\n            This test uses the environment variables currently active on the **server**.\n            If you've recently updated your <code className=\"font-mono bg-muted px-1 py-0.5 rounded\">.env.local</code> file, ensure you have **restarted your Next.js development server** for the changes to apply.\n            For deployed environments, ensure variables are set in your hosting provider's settings and the application has been redeployed/restarted.\n          </AlertDescription>\n        </Alert>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;;;;;;;;AAaO,SAAS,iBAAiB,EAAE,mBAAmB,EAAyB;IAC7E,MAAM,CAAC,OAAO,YAAY,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAChD,CAAC,WAAW,YAAoB,CAAA,GAAA,qHAAA,CAAA,4BAAyB,AAAD,EAAE,YAC1D;IAGF,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,OAAO;YACT,MAAM;gBACJ,OAAO,MAAM,OAAO,GAAG,2BAA2B;gBAClD,aAAa,MAAM,OAAO;gBAC1B,SAAS,MAAM,OAAO,GAAG,YAAY;gBACrC,UAAU,MAAM,OAAO,GAAG,OAAO;YACnC;YACA,IAAI,MAAM,OAAO,IAAI,qBAAqB;gBACxC;YACF;QACF;IACF,GAAG;QAAC;QAAO;QAAO;KAAoB;IAEtC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,QAAQ;oBACN,WAAW;gBACb;0BAEA,cAAA,8OAAC,kIAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,UAAU;oBAAS,WAAU;8BAChD,wBACC;;0CACE,8OAAC,iNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;4BAA8B;;uCAInD;;;;;;;;;;;YAKL,uBACC,8OAAC,iIAAA,CAAA,QAAK;gBAAC,SAAS,MAAM,OAAO,GAAG,YAAY;gBAAe,WAAU;;oBAClE,MAAM,OAAO,iBAAG,8OAAC,2NAAA,CAAA,cAAW;wBAAC,WAAU;;;;;6CAAe,8OAAC,4MAAA,CAAA,UAAO;wBAAC,WAAU;;;;;;kCAC1E,8OAAC,iIAAA,CAAA,aAAU;kCAAE,MAAM,OAAO,GAAG,aAAa;;;;;;kCAC1C,8OAAC,iIAAA,CAAA,mBAAgB;;4BACd,MAAM,OAAO;4BACb,MAAM,OAAO,kBACV,8OAAC;gCAAE,WAAU;;kDACT,8OAAC;kDAAO;;;;;;oCAAiB;oCAAE,MAAM,OAAO;;;;;;;;;;;;;;;;;;;0BAMrD,8OAAC,iIAAA,CAAA,QAAK;gBAAC,SAAQ;gBAAU,WAAU;;kCAChC,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;kCAChB,8OAAC,iIAAA,CAAA,aAAU;kCAAC;;;;;;kCACZ,8OAAC,iIAAA,CAAA,mBAAgB;;4BAAC;0CAEgB,8OAAC;gCAAK,WAAU;0CAAyC;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAMtH","debugId":null}},
    {"offset": {"line": 2227, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/login-form.tsx"],"sourcesContent":["'use client';\n\nimport { useActionState } from 'react'; // Correct import for useActionState\nimport { useFormStatus } from 'react-dom'; // Correct import for useFormStatus\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { loginAction, type FormState } from '@/lib/actions';\nimport { loginSchema, type LoginFormData } from '@/lib/validators';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Terminal } from 'lucide-react';\nimport { useEffect } from 'react';\nimport { useToast } from '@/hooks/use-toast';\n\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" className=\"w-full\" disabled={pending}>\n      {pending ? 'Logging in...' : 'Login'}\n    </Button>\n  );\n}\n\nexport function LoginForm() {\n  const [state, formAction] = useActionState<FormState | null, FormData>(loginAction, null);\n  const { toast } = useToast();\n\n  const form = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      username: '',\n      password: '',\n    },\n  });\n\n   // Display toast message on state change\n   useEffect(() => {\n    if (state?.message) {\n      toast({\n        title: state.success ? 'Success' : 'Error',\n        description: state.message,\n        variant: state.success ? 'default' : 'destructive',\n      });\n      // Reset form on successful login if needed, though page reload might handle this\n      // if (state.success) form.reset();\n    }\n  }, [state, toast, form]);\n\n\n  return (\n    <Card className=\"w-full max-w-sm mx-auto\">\n      <CardHeader className=\"space-y-1 text-center\">\n        <CardTitle className=\"text-2xl font-bold\">Admin Login</CardTitle>\n        <CardDescription>Enter your credentials to access the admin panel</CardDescription>\n      </CardHeader>\n      <form action={formAction}>\n        <CardContent className=\"space-y-4\">\n           {/* Display general error message */}\n          {!state?.success && state?.message && !state.errors && (\n             <Alert variant=\"destructive\">\n               <Terminal className=\"h-4 w-4\" />\n               <AlertTitle>Login Failed</AlertTitle>\n               <AlertDescription>{state.message}</AlertDescription>\n             </Alert>\n          )}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"username\">Username</Label>\n            <Input\n              id=\"username\"\n              type=\"text\"\n              {...form.register('username')}\n              aria-invalid={!!form.formState.errors.username || !!state?.errors?.username}\n            />\n            {form.formState.errors.username && (\n              <p className=\"text-sm text-destructive\">{form.formState.errors.username.message}</p>\n            )}\n             {state?.errors?.username && (\n                <p className=\"text-sm text-destructive\">{state.errors.username.join(', ')}</p>\n             )}\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              {...form.register('password')}\n              aria-invalid={!!form.formState.errors.password || !!state?.errors?.password}\n            />\n            {form.formState.errors.password && (\n              <p className=\"text-sm text-destructive\">{form.formState.errors.password.message}</p>\n            )}\n             {state?.errors?.password && (\n                 <p className=\"text-sm text-destructive\">{state.errors.password.join(', ')}</p>\n             )}\n          </div>\n        </CardContent>\n        <CardFooter>\n          <SubmitButton />\n        </CardFooter>\n      </form>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2537, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2568, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2678, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard-table.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n} from '@/components/ui/table';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { ArrowUpDown } from 'lucide-react';\nimport type { SheetRow } from '@/lib/sheets';\nimport { cn } from '@/lib/utils';\n\ninterface DashboardTableProps {\n  initialData: SheetRow[];\n}\n\ntype SortKey = keyof SheetRow | null;\ntype SortDirection = 'asc' | 'desc';\n\nexport function DashboardTable({ initialData }: DashboardTableProps) {\n  const [data, setData] = React.useState<SheetRow[]>(initialData);\n  const [filter, setFilter] = React.useState<string>('');\n  const [sortKey, setSortKey] = React.useState<SortKey>(null);\n  const [sortDirection, setSortDirection] = React.useState<SortDirection>('asc');\n\n  React.useEffect(() => {\n    setData(initialData);\n  } , [initialData]);\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilter(event.target.value.toLowerCase());\n  };\n\n  const handleSort = (key: keyof SheetRow) => {\n    if (sortKey === key) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortKey(key);\n      setSortDirection('asc');\n    }\n  };\n\n  const filteredData = React.useMemo(() => {\n    return data.filter((row) =>\n      Object.values(row).some((value) =>\n        String(value).toLowerCase().includes(filter)\n      )\n    );\n  }, [data, filter]);\n\n  const sortedData = React.useMemo(() => {\n    if (!sortKey) return filteredData;\n\n    return [...filteredData].sort((a, b) => {\n      const valA = a[sortKey];\n      const valB = b[sortKey];\n\n      // Treat Priority and Probability specifically for sorting if needed\n      // For now, simple string comparison will work as High, Low, Medium sort alphabetically\n      // If custom sort order (High > Medium > Low) is desired, implement here.\n\n      if (valA < valB) return sortDirection === 'asc' ? -1 : 1;\n      if (valA > valB) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }, [filteredData, sortKey, sortDirection]);\n\n  const columns: { key: keyof SheetRow; label: string }[] = [\n    { key: 'Donor/Opp', label: 'Donor/Opportunity' },\n    { key: 'Action/Next Step', label: 'Action/Next Step' },\n    { key: 'Lead', label: 'Lead' },\n    { key: 'Priority', label: 'Priority' },\n    { key: 'Probability', label: 'Probability' },\n  ];\n\n  const getStatusColorClass = (value: string): string => {\n    switch (value?.toLowerCase()) {\n      case 'high':\n        return 'text-green-600 dark:text-green-400 font-semibold';\n      case 'medium':\n        return 'text-yellow-600 dark:text-yellow-400 font-semibold';\n      case 'low':\n        return 'text-destructive font-semibold'; // Uses theme's destructive color for red\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n       <div className=\"flex justify-end\">\n         <Input\n            type=\"text\"\n            placeholder=\"Filter data...\"\n            value={filter}\n            onChange={handleFilterChange}\n            className=\"max-w-sm\"\n          />\n       </div>\n      <div className=\"rounded-md border shadow-sm\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              {columns.map((col) => (\n                 <TableHead key={col.key}>\n                    <Button\n                        variant=\"ghost\"\n                        onClick={() => handleSort(col.key)}\n                        className=\"px-2 py-1 h-auto text-left -ml-2\"\n                    >\n                        {col.label}\n                        <ArrowUpDown className={`ml-2 h-3 w-3 ${sortKey === col.key ? 'opacity-100' : 'opacity-30'}`} />\n                    </Button>\n                </TableHead>\n              ))}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {sortedData.length > 0 ? (\n              sortedData.map((row, index) => (\n                <TableRow key={index}>\n                  {columns.map((col) => (\n                     <TableCell \n                        key={col.key} \n                        className={cn(\n                          col.key === 'Action/Next Step' ? 'min-w-[200px]' : '',\n                          (col.key === 'Priority' || col.key === 'Probability') && getStatusColorClass(String(row[col.key]))\n                        )}\n                      >\n                      {row[col.key]}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                  {initialData.length === 0 ? \"No data available in the sheet.\" : \"No results found for your filter.\"}\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n           <TableFooter>\n             <TableRow>\n               <TableCell colSpan={columns.length} className=\"text-right text-sm text-muted-foreground\">\n                 Total Rows: {sortedData.length}\n               </TableCell>\n             </TableRow>\n           </TableFooter>\n        </Table>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2920, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 2944, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/sheets.ts"],"sourcesContent":["\n'use server';\n\nimport { google } from 'googleapis';\nimport type { sheets_v4 } from 'googleapis';\n\n// Define the structure of a row in your sheet\nexport interface SheetRow {\n  'Donor/Opp': string;\n  'Action/Next Step': string;\n  Lead: string;\n  Priority: 'High' | 'Medium' | 'Low';\n  Probability: 'High' | 'Medium' | 'Low';\n}\n\n// Environment variables\nconst SHEET_ID = process.env.GOOGLE_SHEET_ID;\nconst SERVICE_ACCOUNT_EMAIL = process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL;\nconst SHEET_RANGE = process.env.GOOGLE_SHEET_RANGE || 'Sheet1!A:E'; // Default range if not specified\n\nlet PRIVATE_KEY: string | undefined;\nconst rawPrivateKeyFromEnv = process.env.GOOGLE_PRIVATE_KEY;\n\nif (rawPrivateKeyFromEnv && rawPrivateKeyFromEnv.trim() !== '') {\n    let processedEnvVar = rawPrivateKeyFromEnv.trim();\n    // Strip surrounding quotes if present (common for multi-line env vars)\n    if ((processedEnvVar.startsWith('\"') && processedEnvVar.endsWith('\"')) ||\n        (processedEnvVar.startsWith(\"'\") && processedEnvVar.endsWith(\"'\"))) {\n        processedEnvVar = processedEnvVar.substring(1, processedEnvVar.length - 1);\n    }\n\n    // Now, process for escaped newlines and then trim again\n    let key = processedEnvVar.replace(/\\\\n/g, '\\n').trim();\n\n    // Validate basic PEM structure.\n    if (key.startsWith('-----BEGIN PRIVATE KEY-----') && key.endsWith('-----END PRIVATE KEY-----')) {\n        // Further check: ensure there's content between header and footer\n        const coreKeyContent = key.substring('-----BEGIN PRIVATE KEY-----'.length, key.length - '-----END PRIVATE KEY-----'.length).trim();\n        if (coreKeyContent.length > 0) {\n            PRIVATE_KEY = key;\n        } else {\n            console.warn(\n                'GOOGLE_PRIVATE_KEY appears to have valid PEM markers but no actual key content in between after processing. Sheet operations will fail.' +\n                `\\n  Original GOOGLE_PRIVATE_KEY (trimmed, first 30 chars): \"${(rawPrivateKeyFromEnv || \"\").trim().substring(0, Math.min(30, (rawPrivateKeyFromEnv || \"\").trim().length))}\"`\n            );\n            PRIVATE_KEY = undefined;\n        }\n    } else {\n        console.warn(\n            'GOOGLE_PRIVATE_KEY environment variable appears malformed after processing. It will not be used. Sheet operations may fail.' +\n            `\\n  Problem: Did not pass PEM marker (-----BEGIN/END PRIVATE KEY-----) checks.` +\n            `\\n  Processed key (after potential quote stripping & newline conversion) starts with: \"${key.substring(0, Math.min(30, key.length))}\"` +\n            `\\n  Processed key ends with: \"${key.substring(Math.max(0, key.length - 30))}\"` +\n            `\\n  Length of this processed key string: ${key.length}` +\n            `\\n  Original GOOGLE_PRIVATE_KEY (trimmed, first 30 chars): \"${(rawPrivateKeyFromEnv || \"\").trim().substring(0, Math.min(30, (rawPrivateKeyFromEnv || \"\").trim().length))}\"` +\n            `\\n  Hint: Check for missing PEM markers, extra characters, or incorrect newline escaping in your .env.local file for GOOGLE_PRIVATE_KEY.`\n        );\n        PRIVATE_KEY = undefined;\n    }\n} else {\n    // console.warn('GOOGLE_PRIVATE_KEY is not set, empty, or only whitespace in environment variables. PRIVATE_KEY will be undefined.');\n    PRIVATE_KEY = undefined;\n}\n\n// Initial check for logging purposes; actual guard is in getSheetsClient\n(() => {\n  const missingVarsWarn = [];\n  if (!SHEET_ID) missingVarsWarn.push('GOOGLE_SHEET_ID');\n  if (!SERVICE_ACCOUNT_EMAIL) missingVarsWarn.push('GOOGLE_SERVICE_ACCOUNT_EMAIL');\n  \n  if (!PRIVATE_KEY) { \n    if (!rawPrivateKeyFromEnv || rawPrivateKeyFromEnv.trim() === '' || rawPrivateKeyFromEnv.trim() === '\"\"' || rawPrivateKeyFromEnv.trim() === \"''\") {\n      // This case is normal if env vars are not set up yet. Avoid spamming console for this specific state.\n    } else {\n      // This case means rawPrivateKeyFromEnv was set, but PRIVATE_KEY is still undefined,\n      // implying formatting or PEM marker checks failed. The detailed warning above already covered this.\n      missingVarsWarn.push('GOOGLE_PRIVATE_KEY (set but failed formatting/PEM checks - see detailed warning above)');\n    }\n  }\n  if (missingVarsWarn.length > 0) {\n    console.warn(\n      `SheetSync Initialization Warning: One or more Google Sheets API credentials are problematic. Sheet operations are likely to fail. Problematic variables: [${missingVarsWarn.join(', ')}]`\n    );\n  }\n})();\n\n\nexport async function getSheetsClient(): Promise<sheets_v4.Sheets | null> {\n  if (!SHEET_ID || !SERVICE_ACCOUNT_EMAIL || !PRIVATE_KEY) {\n    const errorParts = ['Cannot initialize Sheets client due to missing/invalid credentials:'];\n    if (!SHEET_ID) errorParts.push('- GOOGLE_SHEET_ID is not set.');\n    if (!SERVICE_ACCOUNT_EMAIL) errorParts.push('- GOOGLE_SERVICE_ACCOUNT_EMAIL is not set.');\n    if (!PRIVATE_KEY) {\n      if (!rawPrivateKeyFromEnv) errorParts.push('- GOOGLE_PRIVATE_KEY is not set.');\n      else if (rawPrivateKeyFromEnv.trim() === '' || rawPrivateKeyFromEnv.trim() === '\"\"' || rawPrivateKeyFromEnv.trim() === \"''\") errorParts.push('- GOOGLE_PRIVATE_KEY is set but is empty or only whitespace.');\n      else errorParts.push('- GOOGLE_PRIVATE_KEY is set but was malformed or failed structural/PEM checks (see previous warnings).');\n    }\n    console.error(errorParts.join('\\n  '));\n    return null;\n  }\n\n  try {\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: SERVICE_ACCOUNT_EMAIL,\n        private_key: PRIVATE_KEY,\n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n    });\n\n    return google.sheets({ version: 'v4', auth });\n  } catch (error) {\n    console.error('Error initializing Google Auth client:', error);\n    if (error instanceof Error && (error.message.includes('DECODER routines') || error.message.includes('PEM routines') || error.message.includes('private key') || error.message.includes('asn1 encoding'))) {\n        console.error(\n          'This error during auth initialization often indicates an issue with the GOOGLE_PRIVATE_KEY format or value even after initial checks. Ensure it is a valid PEM-formatted private key. The key might have passed basic structural checks but is still not parsable by the crypto library.'\n        );\n    }\n    return null;\n  }\n}\n\nexport async function getSheetData(): Promise<SheetRow[]> {\n  const sheets = await getSheetsClient();\n  if (!sheets) {\n     // console.warn('Google Sheets client is not available (possibly due to configuration issues). Returning empty data for dashboard.');\n     return [];\n  }\n  if (!SHEET_ID){ \n    // console.warn('GOOGLE_SHEET_ID is not configured. Returning empty data for dashboard.');\n    return [];\n  }\n\n  try {\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE,\n    });\n\n    const rows = response.data.values;\n    if (!rows || rows.length === 0) {\n      // console.log('No data found in the specified sheet range or sheet is empty.');\n      return [];\n    }\n\n    const headers = rows[0].map(header => String(header).trim());\n    const dataRows = rows.slice(1);\n\n    const expectedHeaders = ['Donor/Opp', 'Action/Next Step', 'Lead', 'Priority', 'Probability'];\n    const missingHeaders = expectedHeaders.filter(eh => !headers.includes(eh));\n    if (missingHeaders.length > 0) {\n       // console.warn(`Sheet is missing expected headers: [${missingHeaders.join(', ')}]. Current headers: [${headers.join(', ')}]. Data mapping might be incorrect or incomplete.`);\n    }\n\n    return dataRows.map((row) => {\n      const rowData: Partial<SheetRow> = {};\n      headers.forEach((header, index) => {\n        const cellValue = row[index] !== undefined && row[index] !== null ? String(row[index]) : ''; \n\n        if (expectedHeaders.includes(header)) { \n            if ((header === 'Priority' || header === 'Probability')) {\n               const value = cellValue.trim();\n               if (['High', 'Medium', 'Low'].includes(value)) {\n                  rowData[header as keyof SheetRow] = value as 'High' | 'Medium' | 'Low';\n               } else {\n                  if (value !== '') {\n                    // console.warn(`Invalid value \"${value}\" for ${header} in row. Defaulting to Medium.`);\n                  }\n                  rowData[header as keyof SheetRow] = 'Medium'; // Default if invalid or empty\n               }\n            } else {\n               rowData[header as keyof SheetRow] = cellValue;\n            }\n        }\n      });\n      // Ensure all expected keys exist, even if not in sheet headers or row is shorter\n      expectedHeaders.forEach(eh => {\n        const key = eh as keyof SheetRow;\n        if (!(key in rowData)) {\n          if (key === 'Priority' || key === 'Probability') {\n            rowData[key] = 'Medium'; \n          } else {\n            rowData[key] = ''; \n          }\n        }\n      });\n      return rowData as SheetRow;\n    }).filter(row => Object.values(row).some(val => typeof val === 'string' && val.trim() !== '')); // Filter out completely empty effective rows\n\n\n  } catch (error) {\n    console.error('Error fetching sheet data from Google Sheets API:', error);\n    if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has at least read access to the Google Sheet (${SHEET_ID}).`);\n    } else if (error instanceof Error && error.message.includes('Requested entity was not found')) {\n        console.error(`Sheet or range not found. Verify GOOGLE_SHEET_ID (${SHEET_ID}) and GOOGLE_SHEET_RANGE (${SHEET_RANGE}).`);\n    } else if (error instanceof Error && (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant'))) {\n        console.error('Authentication failed. This could be due to an invalid service account email, private key, or incorrect project setup.');\n    } else if (error instanceof Error && (error.message.includes('DECODER routines') || error.message.includes('PEM routines'))) {\n        console.error('A cryptographic error occurred, often related to a malformed private key. Ensure GOOGLE_PRIVATE_KEY is correctly formatted in your environment.');\n    }\n    return []; \n  }\n}\n\nexport async function appendSheetRow(rowData: Omit<SheetRow, ''>): Promise<boolean> {\n  const sheets = await getSheetsClient();\n   if (!sheets) {\n      console.error(\"Cannot append row: Google Sheets client not available (possibly due to configuration issues).\");\n      return false;\n   }\n   if (!SHEET_ID) { \n     console.error(\"Cannot append row: GOOGLE_SHEET_ID is not configured.\");\n     return false;\n   }\n\n  const values = [\n    rowData['Donor/Opp'],\n    rowData['Action/Next Step'],\n    rowData.Lead,\n    rowData.Priority,\n    rowData.Probability\n  ];\n\n  try {\n    await sheets.spreadsheets.values.append({\n      spreadsheetId: SHEET_ID,\n      range: SHEET_RANGE, \n      valueInputOption: 'USER_ENTERED', \n      insertDataOption: 'INSERT_ROWS', \n      requestBody: {\n        values: [values],\n      },\n    });\n    console.log('Row appended successfully to Google Sheet.');\n    return true;\n  } catch (error) {\n    console.error('Error appending sheet row to Google Sheets API:', error);\n     if (error instanceof Error && error.message.includes('PERMISSION_DENIED')) {\n        console.error(`Permission denied. Ensure the service account (${SERVICE_ACCOUNT_EMAIL}) has write access to the Google Sheet (${SHEET_ID}).`);\n    } else if (error instanceof Error && (error.message.includes('UNAUTHENTICATED') || error.message.includes('invalid_grant'))) {\n        console.error('Authentication failed while appending. Check service account credentials and permissions.');\n    }\n    return false;\n  }\n}\n\n"],"names":[],"mappings":";;;;;;;IAuFsB;IAmCA;IAmFA","debugId":null}},
    {"offset": {"line": 2960, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/admin-page-client.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, Suspense } from 'react';\nimport { AdminForm } from '@/components/admin-form';\nimport { SheetConfigForm } from '@/components/sheet-config-form';\nimport { LogoutButton } from '@/components/logout-button';\nimport { ConnectionTester } from '@/components/connection-tester';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { TestTubeDiagonal, Eye, EyeOff, LayoutGrid, Settings, Table as TableIcon } from 'lucide-react';\nimport { LoginForm } from '@/components/login-form';\nimport { Button } from '@/components/ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Separator } from '@/components/ui/separator';\nimport { DashboardTable } from '@/components/dashboard-table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { getSheetData } from '@/lib/sheets';\n\ninterface AdminPageClientProps {\n  initialLoggedIn: boolean;\n}\n\n// Helper component for loading skeleton\nfunction AdminTableSkeleton() {\n  return (\n    <div className=\"space-y-4\">\n       <div className=\"flex justify-end\">\n            <Skeleton className=\"h-10 w-[250px]\" />\n       </div>\n      <div className=\"rounded-md border\">\n        <div className=\"overflow-auto\">\n          <table className=\"w-full caption-bottom text-sm\">\n            <thead className=\"[&_tr]:border-b\">\n              <tr className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[150px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[200px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[100px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[80px]\" /></th>\n                <th className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"><Skeleton className=\"h-4 w-[100px]\" /></th>\n              </tr>\n            </thead>\n            <tbody className=\"[&_tr:last-child]:border-0\">\n              {[...Array(5)].map((_, i) => (\n                <tr key={i} className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\">\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                  <td className=\"p-4 align-middle\"><Skeleton className=\"h-4 w-full\" /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Data fetching component wrapped for Suspense for Admin Dashboard\nasync function AdminDashboardDisplay() {\n  const data = await getSheetData();\n  return <DashboardTable initialData={data} />;\n}\n\n\nexport default function AdminPageClient({ initialLoggedIn }: AdminPageClientProps) {\n  const [loggedIn, setLoggedIn] = useState(initialLoggedIn);\n  const [isConnectionVerified, setIsConnectionVerified] = useState(false);\n  const [showConfigFormOverride, setShowConfigFormOverride] = useState(false);\n\n  useEffect(() => {\n    setLoggedIn(initialLoggedIn);\n    if (!initialLoggedIn) {\n        setIsConnectionVerified(false);\n        setShowConfigFormOverride(false);\n    }\n  }, [initialLoggedIn]);\n\n  const handleConnectionSuccess = () => {\n    setIsConnectionVerified(true);\n    setShowConfigFormOverride(false); \n  };\n\n  const toggleShowConfigForm = () => {\n    setShowConfigFormOverride(prev => !prev);\n  }\n\n  const displayConfigForm = !isConnectionVerified || showConfigFormOverride;\n\n  if (!loggedIn) {\n    return <LoginForm />;\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold\">Admin Login</h1>\n        <LogoutButton />\n      </div>\n\n      <Tabs defaultValue=\"data-entry\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3 md:w-[600px]\">\n          <TabsTrigger value=\"data-entry\">\n            <LayoutGrid className=\"mr-2 h-4 w-4\" />\n            Data Entry\n          </TabsTrigger>\n          <TabsTrigger value=\"configuration\">\n            <Settings className=\"mr-2 h-4 w-4\" />\n            Sheet Configuration\n          </TabsTrigger>\n          <TabsTrigger value=\"view-dashboard\">\n            <TableIcon className=\"mr-2 h-4 w-4\" />\n            View Dashboard\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"data-entry\" className=\"mt-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Add New Entry</CardTitle>\n              <CardDescription>Add new entries to the Google Sheet.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <AdminForm />\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"configuration\" className=\"mt-6 space-y-8\">\n          {displayConfigForm ? (\n            <SheetConfigForm />\n          ) : (\n            <Card>\n              <CardHeader>\n                <CardTitle>Google Sheet Configuration</CardTitle>\n                <CardDescription>\n                  Connection to Google Sheets has been successfully verified. The configuration form is hidden.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                 <Button onClick={toggleShowConfigForm} variant=\"outline\">\n                    <Eye className=\"mr-2 h-4 w-4\" /> Show Configuration Form\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n          \n          {isConnectionVerified && !displayConfigForm && <Separator />}\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                  <TestTubeDiagonal className=\"h-5 w-5\" />\n                  Google Sheet Connection Test\n              </CardTitle>\n              <CardDescription>\n                Test the live connection to Google Sheets using current server environment variables.\n                {isConnectionVerified && (\n                    <span className=\"block mt-2 text-sm text-green-600 dark:text-green-400\">\n                        Successfully connected.\n                        {!displayConfigForm && \" Configuration form is currently hidden.\"}\n                    </span>\n                )}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ConnectionTester onConnectionSuccess={handleConnectionSuccess} />\n              {isConnectionVerified && displayConfigForm && (\n                 <Button onClick={toggleShowConfigForm} variant=\"outline\" className=\"mt-4\">\n                    <EyeOff className=\"mr-2 h-4 w-4\" /> Hide Configuration Form\n                </Button>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"view-dashboard\" className=\"mt-6\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>Dashboard Preview</CardTitle>\n                    <CardDescription>View the current data from the Google Sheet.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <Suspense fallback={<AdminTableSkeleton />}>\n                        <AdminDashboardDisplay />\n                    </Suspense>\n                </CardContent>\n            </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}